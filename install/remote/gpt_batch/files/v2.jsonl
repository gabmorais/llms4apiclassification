{"custom_id": "1.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Multi Currency Platform BFF\nDESCRIPTION :\n      Multi Currency Platform BFF WEB\nENDPOINTS :\n    - GET /DollarPrices\n      Get Dollar Prices\n    - GET /Accounts\n      Get a list of account of custumer"}]}}
{"custom_id": "101.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Dynamic Client Registration\nDESCRIPTION :\n      The Dynamic Client Registration API provides operations to register and manage client applications for use with La\n      Banque Postale's OAuth 2.0 and OpenID Connect endpoints. This API largely follows the contract defined in RFC7591:\n      OAuth 2.0 Dynamic Client Registration Protocol and OpenID Connect Dynamic Client Registration 1.0.  Note that\n      clients managed via this API are modeled as applications in La Banque Postale and appear in the Apps section of\n      the administrator UI. Changes made via the API appear in the UI and vice versa. Tokens issued by these clients\n      follow the rules for Access Tokens and ID Tokens.\nENDPOINTS :\n    - POST /register\n      Add a new Client Application to your account\n    - GET /register/{client_id}\n      Retrieve an existing Client Application of your account with all its details\n    - DELETE /register/{client_id}\n      Remove a Client Application from your account"}]}}
{"custom_id": "102.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Banking app\nDESCRIPTION :\n      A simple banking app api\nENDPOINTS :\n    - GET /ping\n    - GET /account\n      get a list of all accounts\n    - POST /account\n      create a bank account\n    - GET /account/{id}\n      get account by an id\n    - PUT /account/{id}\n      update account by an id\n    - POST /money/withdraw\n      withdraw money from an account\n    - POST /money/deposit\n      add some money to account\n    - PUT /money/transfer\n      transfer money to another account\n    - GET /statements/{id}\n      get account statements"}]}}
{"custom_id": "103.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Savings Account Refund Service API\nDESCRIPTION :\n      This suite of APIs can be used to refund the savings accounts balance beloging to a Direct Wines customer.\nENDPOINTS :\n    - POST /user/savingsaccounts/refund/{accountId}\n      Refund Customer Savings Account Balance\n    - POST /user/savingsaccounts/autorefund/{accountId}\n      Refund Customer Savings Account Balance"}]}}
{"custom_id": "104.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Clients\nDESCRIPTION :\n      Provide CRUD operations for Client domain\nENDPOINTS :\n    - GET /clients\n      Get clients\n    - POST /clients\n      Create a new client\n    - GET /clients/{id}\n      Get a client\n    - PUT /clients/{id}\n      Update a client\n    - DELETE /clients/{id}\n      Delete a client"}]}}
{"custom_id": "105.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Beanstream Payments\nDESCRIPTION :\n      https://www.beanstream.com/api/v1\nENDPOINTS :\n    - POST /payments\n      Make Payment\n    - GET /payments/{transId}\n      Get payment\n    - POST /payments/{transId}/completions\n      Complete pre-auth\n    - POST /payments/{transId}/returns\n      Return payment\n    - POST /payments/{transId}/void\n      Void Transaction\n    - POST /profiles\n      Create Profile\n    - DELETE /profiles/{profileId}\n      Delete profile\n    - GET /profiles/{profileId}\n      Get profile\n    - PUT /profiles/{profileId}\n      Update Profile\n    - GET /profiles/{profileId}/cards\n      Get cards\n    - POST /profiles/{profileId}/cards\n      Add card\n    - DELETE /profiles/{profileId}/cards/{cardId}\n      Delete card\n    - PUT /profiles/{profileId}/cards/{cardId}\n      Update card\n    - POST /reports\n      Search Query\n    - POST /scripts/tokenization/tokens\n      Tokenize credit card"}]}}
{"custom_id": "107.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : ExchangeRate-API\nDESCRIPTION :\n      Fetch the latest currency exchange rates via API. ExchangeRate-API is free and unlimited.\nENDPOINTS :\n    - GET /latest/{base_currency}\n      Returns latest exchange rates in parameter-supplied base currency."}]}}
{"custom_id": "11.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Payment Method\nDESCRIPTION :\n      TMF670 Defines a specific method of payment (e.g. direct debit with all details associated) -       Main payment\n      method attributes are its type, details, name, description, isPreffered, status, status date Payment Method API\n      performs the following operations on payment method. -       Retrieval of a payment method or a collection of\n      payment method depending on filter criteria -       Partial update of a payment method -       Creation of a\n      payment method  -       Notification of events on payment method: o       Payment method state change o\n      Payment method change o       Payment method created o       Payment method deleted   \n\n\nCopyright \u00a9 TM [...]\nENDPOINTS :\n    - GET /paymentMethod\n      List or find PaymentMethod objects\n    - POST /paymentMethod\n      Creates a PaymentMethod\n    - GET /paymentMethod/{id}\n      Retrieves a PaymentMethod by ID\n    - DELETE /paymentMethod/{id}\n      Deletes a PaymentMethod\n    - PATCH /paymentMethod/{id}\n      Updates partially a PaymentMethod\n    - POST /hub\n      Register a listener\n    - DELETE /hub/{id}\n      Unregister a listener\n    - POST /listener/paymentMethodCreateEvent\n      Client listener for entity PaymentMethodCreateEvent\n    - POST /listener/paymentMethodAttributeValueChangeEvent\n      Client listener for entity PaymentMethodAttributeValueChangeEvent\n    - POST /listener/paymentMethodStatusChangeEvent\n      Client listener for entity PaymentMethodStatusChangeEvent\n    - POST /listener/paymentMethodDeleteEvent\n      Client listener for entity PaymentMethodDeleteEvent"}]}}
{"custom_id": "110.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Investments Microservice\nDESCRIPTION :\n      API for Personal Investment Plan and related investments  functionality.\nENDPOINTS :\n    - GET /public/pip/config\n      Returns basic config info, e.g. whether the user should be allowed to set up a new Personal Investment Plan,\n      product description, possibility or requirement to create new securities account etc. For performance reasons, it\n      supports query param \"fields\" that can be used with value \"newPlanAllowed\" to limit the response to this [...]\n    - GET /public/pip/themes\n      Get list of available themes with their description and visual representation.\n    - GET /public/pip/themes/{themeId}\n      Get details of a theme.\n    - GET /public/pip/setup-options\n      Returns a set of options for setup of Personal Investment Plan for a chosen fund (or in future package), such as\n      the minimum amount, possible investment frequencies, settlement accounts etc.\n    - POST /public/pip/investment-plans\n    - GET /public/appropriateness-test/definition\n      Returns the definition of appropriateness test, as a questionnaire. If called with 'themeId' query param, the\n      service may return only a subset of questions that is relevant to the funds within the given theme.\n    - PUT /public/appropriateness-test\n    - GET /public/sec-account-setup-options\n    - POST /public/sec-account-setups\n    - GET /public/sec-account-setups/{id}\n    - GET /public/utils/download\n      Wrapper endpoint for downloading documents\n    - GET /public/pip/funds\n      Returns all funds usable for regular investing."}]}}
{"custom_id": "111.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Bank Feeds API\nDESCRIPTION :\n      Bank Feeds API enables your SMB users to set up bank feeds from accounts in your application to supported\n      accounting platforms.  A bank feed is a connection between a source bank account\u2014in your application\u2014and a target\n      bank account in a supported accounting package.  [Read more...](https://docs.codat.io/bank-feeds-api/overview)\n      [See our OpenAPI spec](https://github.com/codatio/oas)\nENDPOINTS :\n    - GET /companies/{companyId}/connections/{connectionId}/connectionInfo/bankFeedAccounts\n      List bank feed bank accounts\n    - PUT /companies/{companyId}/connections/{connectionId}/connectionInfo/bankFeedAccounts\n      Create bank feed bank accounts\n    - PATCH /companies/{companyId}/connections/{connectionId}/connectionInfo/bankFeedAccounts/{accountId}\n      Update bank feed bank account\n    - GET /companies/{companyId}/connections/{connectionId}/data/bankAccounts/{accountId}/bankTransactions\n      List bank transactions for bank account\n    - GET /companies/{companyId}/connections/{connectionId}/options/bankAccounts/{accountId}/bankTransactions\n      List push options for bank account bank transactions\n    - POST /companies/{companyId}/connections/{connectionId}/push/bankAccounts/{accountId}/bankTransactions\n      Create bank transactions"}]}}
{"custom_id": "113.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Payment Services\nDESCRIPTION :\n      A set of API endpoints that allow consumer to initiate, settle, and modify payments through Payment Services.\n      Consumer can use the API to accept card payments.   ## Authentication To connect to the Payments API, consumer\n      must use OAuth Tokens.\nENDPOINTS :\n    - POST /payment/miles/authorization\n      Redeem miles from a user account and send unique authorization code to consumer\n    - POST /payment/authorization\n      Obtain an authorization code to charge a certain amount to a specific form of payment"}]}}
{"custom_id": "114.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Gpay Fund Transfer API Document\nDESCRIPTION :\n      Gpays Fund Transfer Public API Document   **Error codes:** - 1009 - Invalid HMAC  - 1010 - Server Exception  -\n      1011 - Invalid Merchant   - 1012 - Invalid Phone Number   - 1013 - Invalid Identity Number  - 1014 - Invalid Full\n      Name   - 1015 - Invalid Bank Code   - 1016 - Invalid Type (of fund-transfer wallet to bank)   **Bank account\n      test:** - Account number: 0687041020972  - Bank code: VCCB  **List bank codes:** [Click\n      here](https://drive.google.com/file/d/1xx7PeiHifbvkZBTZT8ujuYrHM3Sms52f/view?usp=sharing)   ___ **API v2**:\n      improve security, error tracking, [click here](https://app.swaggerhub.com/apis/tuna-gpay/g-pay- [...]\nENDPOINTS :\n    - POST /fund-transfers/wallet-to-wallet\n      Fundtransfer from wallet to wallet\n    - GET /fund-transfers/wallet-to-wallet/{fund_transfer_id}\n      Get detail transfer\n    - GET /fund-transfers/w2w/{fund_transfer_id}\n      Get transfer detail\n    - POST /fund-transfers/wallet-to-bank\n      Fundtransfer from wallet to bank account\n    - GET /fund-transfers/wallet-to-bank/{fund_transfer_id}\n      Get detail transfer\n    - GET /fund-transfers/w2b/{fund_transfer_id}\n      Get transfer detail\n    - GET /merchants/wallet\n      Get merchant account"}]}}
{"custom_id": "115.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Locations API\nDESCRIPTION :\n      The Locations API provides access to MasterCard's ATM and Merchant location database\nENDPOINTS :\n    - GET /atms/v1/atm\n      Returns detailed information about an ATM location.  This information can be used to display ATMs on a map,\n      provide driving directions, or show special ATM features.\n    - GET /atms/v1/country\n      Returns countries with valid ATM locations.\n    - GET /atms/v1/countrysubdivision\n      Returns country subdivisions that have ATM locations.  A country subdivision is a segment within a country (ex\n      state or province). Country subdivisions are only available for the US and Canada.\n    - GET /merchants/v1/category\n      Returns a list of all merchant categories for contactless and cash back merchants (example:  Airline, Retail,\n      etc.).\n    - GET /merchants/v1/country\n      Returns countries that have Merchants offering the following services: accept contactless-enabled cards and\n      devices, allow customers to add money to an eligible MasterCard or Maestro prepaid card, issue MasterCard Prepaid\n      Travel cards, offer cash at checkout when paying with a Debit MasterCard or Maestro Card.\n    - GET /merchants/v1/countrysubdivision\n      Returns country subdivisions that have Merchants offering the following services: accept contactless-enabled cards\n      and devices, allow customers to add money to an eligible MasterCard or Maestro prepaid card, issue MasterCard\n      Prepaid Travel cards, offer cash at checkout when paying with a Debit MasterCard or Maestro Card. A country [...]\n    - GET /merchants/v1/merchant\n      Returns merchant location information for merchants offering the following services: accept contactless-enabled\n      cards and devices, allow customers to add money to an eligible MasterCard or Maestro prepaid card, issue\n      MasterCard Prepaid Travel cards, participate in the MasterCard Easy Savings program, and offer cash at [...]"}]}}
{"custom_id": "116.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Transfers API\nDESCRIPTION :\n      >Versions 1 and 2 of the Transfers API are deprecated. If you are just starting your implementation, use the\n      latest version.  This API provides endpoints that you can use to transfer funds, whether when [paying out to a\n      transfer instrument](https://docs.adyen.com/marketplaces-and-platforms/payout-to-users/on-demand-payouts),\n      [sending funds to third parties](https://docs.adyen.com/marketplaces-and-platforms/business-accounts/send-receive-\n      funds) for users with business bank accounts, or to [request a payout for a grant\n      offer](https://docs.adyen.com/marketplaces-and-platforms/capital). The API also supports use cases for [...]\nENDPOINTS :\n    - GET /transactions\n      Get all transactions\n    - GET /transactions/{id}\n      Get a transaction\n    - POST /transfers\n      Transfer funds"}]}}
{"custom_id": "117.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Identity API\nDESCRIPTION :\n      <span class=\"tablenote\"><b>Note:</b> Not all the account related fields are returned for an authenticated user.\n      The fields returned in the response are controlled by the scopes and are available only to select developers\n      approved by business units.</span><br /><br />Retrieves the authenticated user's account profile information. It\n      can be used to let users log into your app or site using eBay, which frees you from needing to store and protect\n      user's PII (Personal Identifiable Information) data.\nENDPOINTS :\n    - GET /user/\n      This method retrieves the account profile information for an authenticated user, which requires a User access\n      token. What is returned is controlled by the scopes. For a business account you use the default scope\n      commerce.identity.readonly, which returns all the fields in the businessAccount container. These are [...]"}]}}
{"custom_id": "118.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Morningstar Next Best Dollar API\nDESCRIPTION :\n      Next Best Dollar divides respondent's target savings for a year into different investment and savings options such\n      as 401k, Emergency Savings Account, debt repayment etc as per a heurisitics-based algorithm.    **Household Based\n      Decisions**    NBD is capable of generating household-based advice catering to partner's retirement accounts,\n      investments etc.    **Customizable Investment Algorithm**       The API can provide for a customized investment\n      logic through config details.    **Step-wise Logic**    The algorithm works on a step-wise logic resembling a\n      waterfall distribution of target saving amount. These steps can be reordered, included/excluded using [...]\nENDPOINTS :\n    - POST /starflow/ade-nbd/dev/v1/runs\n      post request, the main call"}]}}
{"custom_id": "119.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Multibanking API\nDESCRIPTION :\n      Whole multibanking API\nENDPOINTS :\n    - GET /public/external-banks/connections\n      Delivers list of external bank connections\n    - POST /public/external-banks/{bankId}/connections\n      (DRAFT) Set ups a new ext-bank connection (KBR in MBS context)\n    - GET /public/external-banks/{bankId}/connections/{connectionId}\n      Delivers single connection identified by ID\n    - DELETE /public/external-banks/{bankId}/connections/{connectionId}\n      Deletes the ext-bank connection identified by ID\n    - PATCH /public/external-banks/{bankId}/connections/{connectionId}\n      (DRAFT) Updates or replaces KBR data\n    - POST /public/external-banks/{bankId}/connections/{connectionId}/deactivation\n      Deactivates the connection with the ext-bank\n    - POST /public/external-banks/{bankId}/connections/{connectionId}/reactivation\n      Reactivates the connection with the ext-bank\n    - GET /public/external-banks/{bankId}/connections/{connectionId}/certificates/{certificateId}\n      Delivers information related to the certificate\n    - GET /public/external-banks\n      (DRAFT) Delivers list of available external-banks, at the moment only those offered via MBS (Multibank standard)"}]}}
{"custom_id": "120.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Trading Positions API\nDESCRIPTION :\n      API to fetch start-of-day/end-of-day trading positions\nENDPOINTS :\n    - GET /job/{jobTag}/start\n      Starts an IBOR SOD/EOD/OPENORD job\n    - GET /job/{jobTag}/status\n      Returns job status information for recent runs.\n    - GET /job/{jobTag}/status/{runNumber}\n      Returns job status information for recent runs.\n    - GET /openOrders\n      Get Open Orders.\n    - GET /trading-positions/positions\n      Get account positions."}]}}
{"custom_id": "122.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Authentication and Authorization API\nDESCRIPTION :\n      This API is for user authentication during local/SSO login and token validation for other API requests\nENDPOINTS :\n    - POST /auth/v1/login\n      Local login\n    - GET /auth/v1/validate\n      Validate token"}]}}
{"custom_id": "123.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : FirstClientRegistry API\nDESCRIPTION :\n      The FirstClientRegistry API allows you (authorized Partner developers) to retrieve various information from our\n      client's storefronts.\nENDPOINTS :\n    - GET /products\n      List all products\n    - GET /merchants\n      List all merchants\n    - GET /outlets\n      List all outlets\n    - GET /customers\n      List all customers"}]}}
{"custom_id": "124.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Arespass\nDESCRIPTION :\n      Analyzes a password and calculates its entropy.\nENDPOINTS :\n    - GET /about\n      Metadata about this API&#58; version number, release date and available languages.  Metadata requests are NOT\n      billed.\n    - GET /ec\n      The entropy calculator - alias ec -, analyzes a password and calculates its entropy.  Entropy calculator requests\n      are billed."}]}}
{"custom_id": "126.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Investment History\nDESCRIPTION :\n      API for retrieving information about a members investments.\nENDPOINTS :\n    - GET /v1/members/{multiPartMemberId}/investments\n      Gets a summary of the members investments.\n    - GET /v1/members/{multiPartMemberId}/investments/{investmentId}\n      Gets the history of each transaction for a particular investment."}]}}
{"custom_id": "127.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Payments\nDESCRIPTION :\n      This API creates a payment order, cancels a payment order, and creates a simulated payment order for a physical or\n      business customer.  The API can also retrieve a list of payment orders and the details and status of a specific\n      payment order.  Payment orders can be of different payment types and for international or domestic payments.\nENDPOINTS :\n    - GET /\n      Retrieves a list of payment orders for a customer.\n    - POST /\n      Creates a payment order for a customer.\n    - POST /simulate_payment\n      Creates a simulated payment order for a customer.\n    - GET /{instant_payment_id}\n      Retrieves details of a specific payment order for a customer.\n    - GET /{instant_payment_id}/status\n      Retrieves the status of a specific payment order for a customer.\n    - POST /{instant_payment_id}/cancel\n      Cancels a specific payment order for a customer."}]}}
{"custom_id": "128.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : IBKR 3rd Party Web API\nDESCRIPTION :\n      Interactive Brokers Web API for 3rd Party Companies\nENDPOINTS :\n    - GET /accounts\n      Brokerage Accounts\n    - POST /accounts/{account}/order_impact\n      Return margin impact info\n    - GET /accounts/{account}/orders\n      Open Orders\n    - POST /accounts/{account}/orders\n      Place Order\n    - DELETE /accounts/{account}/orders/{CustomerOrderId}\n      Cancel Order\n    - GET /accounts/{account}/orders/{CustomerOrderId}\n      Return specific order info\n    - PUT /accounts/{account}/orders/{CustomerOrderId}\n      Modify Order\n    - GET /accounts/{account}/positions\n      Account Positions\n    - GET /accounts/{account}/summary\n      Account Values Summary\n    - GET /accounts/{account}/trades\n      Returns trades in account\n    - GET /marketdata/exchange_components\n      Exchange Components\n    - GET /marketdata/snapshot\n      Market Data Snapshot\n    - POST /oauth/access_token\n      Obtain a access token\n    - POST /oauth/live_session_token\n      Obtain a live session token\n    - POST /oauth/request_token\n      Obtain a request token\n    - GET /secdef\n      Get security definition"}]}}
{"custom_id": "129.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : customer-info-customer-api\nDESCRIPTION :\n      customer information management  X-API-Key:   - non-prod: `576f5125-62af-4e75-aefe-f0eca615d46d`\nENDPOINTS :\n    - GET /customer-info/v1/customers/phones/{phoneNo}/loyalty\n      Get customer by phone number only member loyalty type"}]}}
{"custom_id": "132.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : SimpliVPNAPI\nDESCRIPTION :\n\nENDPOINTS :\n    - POST /disable-user\n      DisableUser\n    - POST /enable-user\n      EnableUser\n    - POST /login\n      Login\n    - POST /register\n      Register\n    - GET /server-summaries\n    - GET /servers\n    - POST /username-available\n      UsernameAvailable"}]}}
{"custom_id": "134.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : currency-conversion-rate\nDESCRIPTION :\n      Get rates between 2 currencies based on brand and date\nENDPOINTS :\n    - POST /conversion-rate\n      Get rates"}]}}
{"custom_id": "135.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : License Manager API\nDESCRIPTION :\n      ## Welcome!    The License Manager API allows you to create users, modify their names and emails, as well as add\n      and remove roles from users.    ### ATTRIBUTES    |Attribute name | Description |  |:------------|--------------|\n      |accountName | Account name in VTEX License Manager |  |environment | Environment on which you want to run the\n      query e.g. vtexcommercestable |  |userId      | Unique user identification string |  |roleId      | Integer that\n      represents a role, can be looked up on the License Manager UI |\nENDPOINTS :\n    - GET /api/license-manager/site/pvt/logins/list/paged\n      Get List of Users\n    - GET /api/license-manager/site/pvt/roles/list/paged\n      Get List of Roles\n    - POST /api/license-manager/users\n      Create User\n    - GET /api/license-manager/users/{userId}\n      Get User\n    - GET /api/license-manager/users/{userId}/roles\n      Get Roles by User/appKey\n    - PUT /api/license-manager/users/{userId}/roles\n      Put Roles in User/appKey\n    - DELETE /api/license-manager/users/{userId}/roles/{roleId}\n      Remove Role from User/appKey\n    - GET /api/vlm/account\n      Get information about account\n    - GET /api/vlm/account/stores\n      Get Stores\n    - GET /api/vlm/appkeys\n      Get appKeys from account\n    - POST /api/vlm/appkeys\n      Create new appkey\n    - PUT /api/vlm/appkeys/{id}\n      Update appkey"}]}}
{"custom_id": "136.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : eBay Finances API\nDESCRIPTION :\n      This API is used to retrieve seller payouts and monetary transaction details related to those payouts.\nENDPOINTS :\n    - GET /payout\n      <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span\n      style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span\n      class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" [...]\n    - GET /payout/{payout_Id}\n      <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span\n      style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span\n      class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" [...]\n    - GET /payout_summary\n      <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span\n      style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span\n      class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" [...]\n    - GET /seller_funds_summary\n      <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span\n      style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span\n      class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" [...]\n    - GET /transaction\n      <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span\n      style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span\n      class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" [...]\n    - GET /transaction_summary\n      <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span\n      style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span\n      class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" [...]\n    - GET /transfer/{transfer_Id}\n      <div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span\n      style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span\n      class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" [...]"}]}}
{"custom_id": "138.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Transfers API\nDESCRIPTION :\n      The transfers API will register all the transfers and will generate different events like new balance update, new\n      transfer registered or notification events\nENDPOINTS :\n    - GET /transfers\n      Retrieves a list of transfers previously submited by the user. User_id is obtained fron the Access token claim.\n    - POST /transfers\n      Creates a new transfer. First it needs to check if there isn't any other transfer in the last 5 minutes with the\n      same source, destination and amount. If the same transaction is detected the transaction will be discarted. We\n      need to extract the userId from the JWT and save with the transaction.\n    - GET /transfers/{transfer_id}\n      Get the transfer based on the Id and checks if the JWT token has permissions to view the data.\n    - PUT /transfers/{transfer_id}\n      Update the transfer status\n    - POST /linked_accounts\n      Store the link for a Nautilus Account with an external bank. That link will be used to redirect transfers. The\n      user could have multiple linked accounts."}]}}
{"custom_id": "14.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Stocks API\nDESCRIPTION :\n      APIs for stocks\nENDPOINTS :\n    - GET /sector\n      Return a list of sectors\n    - GET /sector/{sectorId}\n      Return top stocks in a sector by ID\n    - GET /price/{symbolId}\n      Return price of one symbol by ID\n    - GET /price/topstocks\n      Return top stocks\n    - GET /commodity\n      Return a list of commodities\n    - GET /commodity/{commodityId}\n      Return commodity price by ID"}]}}
{"custom_id": "140.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : koomalooma Partner API\nDESCRIPTION :\n      This is the koomalooma Partner API. koomalooma is the first Loyalty BPaaS (Business Process as a Service) for\n      mobile and web companies. With koomalooma merchants issue points for actions their customers / users make on your\n      mobile or web store, for example a purchase or a referral. koomalooma takes care of all the rest, from signing up\n      users, keeping track of points and delivering rewards in over 80 countries. koomalooma offers an easy to integrate\n      API and web backend to configure loyalty campaigns and track performance. You can find more at\n      http://support.koomalooma.com\nENDPOINTS :\n    - POST /users\n      Create a User\n    - POST /users/{user_id}/commitments\n      Assign points to a User"}]}}
{"custom_id": "141.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Adyen Data Protection API\nDESCRIPTION :\n      Adyen Data Protection API provides a way for you to process [Subject Erasure Requests](https://gdpr-\n      info.eu/art-17-gdpr/) as mandated in GDPR.  Use our API to submit a request to delete shopper's data, including\n      payment details and other related information (for example, delivery address or shopper email).## Authentication\n      Each request to the Data Protection API must be signed with an API key. Get your API Key from your Customer Area,\n      as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-\n      api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: [...]\nENDPOINTS :\n    - POST /requestSubjectErasure\n      Submit a Subject Erasure Request."}]}}
{"custom_id": "143.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Open Banking - Payments initiation service\nDESCRIPTION :\n      Open Banking - Payments initiation service\nENDPOINTS :\n    - POST /payments/aspsps\n      Get list of ASPSPs\n    - POST /payments/consents/raw\n      Extracts the original raw consent given by the aspsp\n    - POST /payments/cross-border-credit-transfers\n      Redeem the payment\n    - POST /payments/cross-border-credit-transfers/consents\n      Request consent initiation via redirect\n    - POST /payments/cross-border-credit-transfers/payment-status\n      Get payment status\n    - POST /payments/domestic-credit-transfers\n      Redeem the payment\n    - POST /payments/domestic-credit-transfers/consents\n      Request consent initiation via redirect\n    - POST /payments/domestic-credit-transfers/payment-status\n      Get payment status\n    - GET /payments/health\n      Returns the status of each connectivity provider\n    - POST /payments/sepa-credit-transfers\n      Redeem the payment\n    - POST /payments/sepa-credit-transfers/consents\n      Request consent initiation via redirect\n    - POST /payments/sepa-credit-transfers/payment-status\n      Get payment status"}]}}
{"custom_id": "144.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Blockchain.info Exchange Rates API\nDESCRIPTION :\n      Market Prices and exchanges rates api\nENDPOINTS :\n    - GET /ticker\n      Get BTC exchange rates\n    - GET /tobtc\n      Convert x value in the provided currency to btc."}]}}
{"custom_id": "145.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Arlequin Invest Trading API\nDESCRIPTION :\n      # README # 1. Get an authentication token Use your application credentials (login and password) to get a token\n      with the request  ```/api/get-authentication-token ``` This token must be used in the Authorization parameter of\n      the header of **all** subsequent request. It should be preceded by the 'Bearer' keyword and a space. For example:\n      ```{\"Authorization\":\"Bearer yourToken\"} ``` # 2. Retrieve your account key Use the request  ```/api/get-my-\n      accounts ``` to retrieve the details of each of your account. You will need the value of the key\n      ```EncryptedId```, as the identifier of your account. This value should be used for all request related to [...]\nENDPOINTS :\n    - POST /api/get-authentication-token\n      Get your authentication token\n    - GET /api/get-my-accounts\n      List my accounts\n    - POST /api/get-trades-history\n      Get trades history\n    - POST /api/get-algo-orders\n      Get my open algo orders\n    - POST /api/get-instruments-list\n      Get the tradable instruments list\n    - POST /api/trade\n      Send a trade\n    - POST /api/get-order-commissions\n      Get commissions\n    - POST /api/modify-algo-order\n      Modify an algo order\n    - POST /api/cancel-algo-order\n      Cancel algo order"}]}}
{"custom_id": "146.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Customer API\nDESCRIPTION :\n      This is the Customer API. It provides RESTful operations for customer data\nENDPOINTS :\n    - GET /customer\n      reads a customer's data\n    - POST /customer\n      adds a new customer\n    - PUT /Customer/{customerId}\n      update existing customer\n    - DELETE /Customer/{customerId}\n      delete an existing customer"}]}}
{"custom_id": "147.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Financial Products Second Layer - Savings\nDESCRIPTION :\n      This is a simple API\nENDPOINTS :\n    - POST /getSavings\n      Returns Savings List second Layer"}]}}
{"custom_id": "149.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Payment Processing APIs- Get Payments Options.\nDESCRIPTION :\n      Payment Processing APIs - ISO20022\nENDPOINTS :\n    - GET /payments/options\n      getPayment options"}]}}
{"custom_id": "15.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Stocks Service\nDESCRIPTION :\n      Stock service to perform CRUD operations around a stock resource\nENDPOINTS :\n    - GET /stocks\n      Returns list of stocks\n    - POST /stocks\n      Creates a stock\n    - GET /stocks/{stockId}\n      Returns Stock of the given ID\n    - PATCH /stocks/{stockId}\n      updates the price of the stock identified by the given id"}]}}
{"custom_id": "150.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : GOV.UK Pay API\nDESCRIPTION :\n      GOV.UK Pay API (This version is no longer maintained. See openapi/publicapi_spec.json for latest API\n      specification)\nENDPOINTS :\n    - GET /v1/payments\n      Search payments\n    - POST /v1/payments\n      Create new payment\n    - GET /v1/payments/{paymentId}\n      Find payment by ID\n    - POST /v1/payments/{paymentId}/cancel\n      Cancel payment\n    - POST /v1/payments/{paymentId}/capture\n      Capture payment\n    - GET /v1/payments/{paymentId}/events\n      Return payment events by ID\n    - GET /v1/payments/{paymentId}/refunds\n      Get all refunds for a payment\n    - POST /v1/payments/{paymentId}/refunds\n      Submit a refund for a payment\n    - GET /v1/payments/{paymentId}/refunds/{refundId}\n      Find payment refund by ID\n    - GET /v1/refunds\n      Search refunds"}]}}
{"custom_id": "151.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Transfers\nDESCRIPTION :\n      The Transfers API provides the basic functionality to create a payment process, validate it and execute the\n      transfer.\nENDPOINTS :\n    - GET /transfers\n      Obtains transfers processes.\n    - POST /transfers\n      Create a transfer process.\n    - PUT /transfers/{transfer-id}/approve\n      Approve a transfer process.\n    - PUT /transfers/{transfer-id}/execute\n      Executes transfer process.\n    - POST /transfers/webhook\n      Process to set transfer status."}]}}
{"custom_id": "152.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Entityworx\nDESCRIPTION :\n      Investments API Reference Documentation.\nENDPOINTS :\n    - GET /DemoAPI/FXAPIService.svc/InterestRates_GetList\n      List Information for an Interest Rate\n    - GET /DemoAPI/FXAPIService.svc/InterestRates_GetDetail\n      Fetch Details for an Interest Rate\n    - GET /DemoAPI/FXAPIService.svc/ThirdParty_GetDetail\n      Fetch Details for a Third Party\n    - GET /DemoAPI/FXAPIService.svc/InvestmentManager_GetList\n      List All Investment Managers\n    - GET /DemoAPI/FXAPIService.svc/ThirdParty_Add\n      Create a Third Party\n    - GET /DemoAPI/FXAPIService.svc/InterestRates_Edit\n      Edit Interest Rate Record\n    - GET /DemoAPI/FXAPIService.svc/InvestmentBatchType_GetList\n      List All Investment Batch Types\n    - GET /DemoAPI/FXAPIService.svc/InvestmentBatchType_GetDetail\n      Fetch Details for Investment Batch Type\n    - GET /DemoAPI/FXAPIService.svc/InvestmentBatchHistory_GetList\n      List All Investment Batch History Records\n    - GET /DemoAPI/FXAPIService.svc/ThirdParty_Delete\n      Delete Third Party Record\n    - GET /DemoAPI/FXAPIService.svc/InvestmentBatchHistory_GetDetail\n      Fetch Details for a Investment Batch History Record\n    - GET /DemoAPI/FXAPIService.svc/ThirdParty_Edit\n      Edit a Third Party Record\n    - GET /DemoAPI/FXAPIService.svc/InvestmentManager_GetDetail\n      Fetch Details for an Investment Manager Record\n    - GET /DemoAPI/FXAPIService.svc/ThirdParty_GetList\n      List All Third Party Records"}]}}
{"custom_id": "153.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Client Details API\nDESCRIPTION :\n      Client Details API\nENDPOINTS :\n    - GET /details\n      service to get Client Details\n    - PUT /details\n      updates Client Detail\n    - POST /details\n      adds an Client Details item\n    - DELETE /details\n      deletes Client Detail"}]}}
{"custom_id": "154.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : IBANAPI OpenApi Documentation\nDESCRIPTION :\n      IBANAPI OpenApi documentation\nENDPOINTS :\n    - GET /balance\n      Get Account Balance\n    - GET /validate\n      Validate IBAN\n    - GET /validate-basic\n      Validate IBAN Basic"}]}}
{"custom_id": "155.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Sonar Trading\nDESCRIPTION :\n      Currency Authority: Exchange Rate of 1453 country currencies and crypto currencies\nENDPOINTS :\n    - GET /convert\n      Convert a currency amount to multiple other currencies\n    - GET /country/currencies\n      Return a list of all currencies of countries, available via service\n    - GET /digital/currencies\n      Return a list of all digital currencies, available via service\n    - GET /history\n      Return a historic rate for a currencies"}]}}
{"custom_id": "156.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Adyen Recurring API\nDESCRIPTION :\n      The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created\n      with validation during a payment request.  For more information, refer to our [Tokenization\n      documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API\n      credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an\n      API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type:\n      application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and [...]\nENDPOINTS :\n    - POST /createPermit\n      Create new permits linked to a recurring contract.\n    - POST /disable\n      Disable stored payment details\n    - POST /disablePermit\n      Disable an existing permit.\n    - POST /listRecurringDetails\n      Get stored payment details\n    - POST /notifyShopper\n      Ask issuer to notify the shopper\n    - POST /scheduleAccountUpdater\n      Schedule running the Account Updater"}]}}
{"custom_id": "158.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Authentiq Connect API\nDESCRIPTION :\n      Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq\n      ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer\n      documentation.\nENDPOINTS :\n    - GET /authorize\n      Authenticate a user\n    - GET /client\n      List clients\n    - POST /client\n      Register a client\n    - DELETE /client/{client_id}\n      Delete a client\n    - GET /client/{client_id}\n      View a client\n    - PUT /client/{client_id}\n      Update a client\n    - POST /token\n      Obtain an ID Token\n    - GET /userinfo\n      Retrieve a user profile\n    - GET /{client_id}/iframe\n      Include a session iframe"}]}}
{"custom_id": "159.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Currency Excahnge API\nDESCRIPTION :\n      This is a simple currency exchange API\nENDPOINTS :\n    - GET /currencies\n      all available excahnge currencies\n    - GET /rates\n      real-time or historical exchange rates\n    - POST /convert\n      amount from one currency to another\n    - GET /sources\n      list of external sources\n    - GET /cross-rates\n      real-time or historical cross rates"}]}}
{"custom_id": "16.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Merchant Identifier API V2\nDESCRIPTION :\n      API for Merchant Identifier\nENDPOINTS :\n    - GET /merchant-ids\n      Returns merchant descriptor and locator information based on the criteria you provide.  Information returned\n      includes merchant DBA name, merchant category code (MCC), street address, city, state, postal code, country, and\n      sales channels."}]}}
{"custom_id": "162.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : FundTransfer API\nDESCRIPTION :\n      Transfers of funds between accounts within the same financial institution or between an account within the\n      financial institution and an account in  another institution\nENDPOINTS :\n    - POST /fundtransfer\n      Insert a FundTransfer"}]}}
{"custom_id": "163.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : PasswordUtility.Web\nDESCRIPTION :\n      Validate and generate passwords using open source tools\nENDPOINTS :\n    - POST /api/password/generate\n    - POST /api/password/validate"}]}}
{"custom_id": "165.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Api Documentation\nDESCRIPTION :\n      Api Documentation\nENDPOINTS :\n    - POST /authentication/forgotPassword\n      forgotPassword\n    - POST /authentication/register\n      register\n    - POST /authentication/setForgotPassword\n      validates the mail token and set new password\n    - POST /authentication/token\n      authenticate the user and returns the token\n    - POST /authentication/validateMailToken\n      validates the mail token"}]}}
{"custom_id": "166.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : User API\nDESCRIPTION :\n      The Vonage Business Cloud User API enables you to retrieve information about users.  Your application must\n      subscribe to the Provisioning API suite to use this API.\nENDPOINTS :\n    - GET /api/accounts/{account_id}/users\n      Get account users data by account ID\n    - GET /api/accounts/{account_id}/users/{user_id}\n      Get user data by account ID and user ID"}]}}
{"custom_id": "168.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : API Bitcoin Wallet\nDESCRIPTION :\n      api for bitcoin wallet in trustkeys\nENDPOINTS :\n    - GET /bitcoinapi/bitcoinwallet/main\n      return list transaction on network BTC\n    - POST /bitcoinapi/bitcoinwallet/main\n      send transaction on network main btc\n    - GET /bitcoinapi/bitcoinwallet/test\n      return list transaction on network BTCTEST\n    - POST /bitcoinapi/bitcoinwallet/test\n      send transaction on network testnet"}]}}
{"custom_id": "169.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Adyen Recurring API\nDESCRIPTION :\n      The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created\n      with validation during a payment request.  For more information, refer to our [Tokenization\n      documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API\n      credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an\n      API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type:\n      application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and [...]\nENDPOINTS :\n    - POST /disable\n      Disable stored payment details\n    - POST /listRecurringDetails\n      Get stored payment details\n    - POST /notifyShopper\n      Ask issuer to notify the shopper\n    - POST /scheduleAccountUpdater\n      Schedule running the Account Updater"}]}}
{"custom_id": "17.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Blockchain API\nDESCRIPTION :\n      API to monitor the status of multiple blockchains using their respective RPC endpoints\nENDPOINTS :\n    - GET /blockchains\n      Retrieve all blockchains\n    - POST /blockchains\n      Add or update a blockchain\n    - GET /blockchains/{name}\n      Retrieve details of a specific blockchain by its name\n    - DELETE /blockchains/{name}\n      Delete a specific blockchain by its name\n    - GET /status\n      Retrieve status information for all blockchains"}]}}
{"custom_id": "171.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Currency exchange rate\nDESCRIPTION :\n      Currenty exchange rate API gives the exchange rate between US and CAD for latest or for any historic date.\nENDPOINTS :\n    - GET /exchange-rate\n      Return currency exchange rate list\n    - POST /exchange-rate\n      Add a exchange rate to the system\n    - PUT /exchange-rate/{id}\n      Update an existing exchange rate by date\n    - DELETE /exchange-rate/{id}\n      Deletes a exchange rate\n    - GET /exchange-rate/{date}/from/{from}/to/{to}\n      Get exchange rate {from} currency {to} currency for given date"}]}}
{"custom_id": "172.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Bank\nDESCRIPTION :\n        You can use this inbound synchronous service to create, read, update, and mark bank master data for deletion.\n      Use a standard archiving tool for the actual deletion of bank master data. The service is based on the OData\n      protocol and can be consumed in SAP Fiori apps and other user interfaces.\nENDPOINTS :\n    - GET /Bank\n      Get entities from Bank\n    - POST /Bank\n      Add new entity to Bank\n    - GET /Bank(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}')\n      Get entity from Bank by key\n    - PATCH /Bank(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}')\n      Update entity in Bank\n    - GET /Bank(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}')/_BankAddress\n      Get entities from related _BankAddress\n    - POST /Bank(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}')/_BankAddress\n      Add new entity to related _BankAddress\n    - GET /BankAddress\n      Get entities from BankAddress\n    - GET /BankAddress(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}',AddressRepresentationCode='{AddressRepresentationCode}')\n      Get entity from BankAddress by key\n    - DELETE /BankAddress(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}',AddressRepresentationCode='{AddressRepresentationCode}')\n      Delete entity from BankAddress\n    - PATCH /BankAddress(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}',AddressRepresentationCode='{AddressRepresentationCode}')\n      Update entity in BankAddress\n    - GET /BankAddress(BankCountry='{BankCountry}',BankInternalID='{BankInternalID}',AddressRepresentationCode='{AddressRepresentationCode}')/_Bank\n      Get related _Bank\n    - POST /$batch\n      Send a group of requests"}]}}
{"custom_id": "173.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : RestAPI\nDESCRIPTION :\n      Welcome to the RestAPI, a comprehensive interface catering to various banking and financial management needs. This\n      API acts as a central hub, facilitating communication between different components for seamless execution of\n      RESTful operations.\nENDPOINTS :\n    - GET /savingsGoals\n      Get all Savings Goals\n    - POST /savingsGoals\n      Create a new periodical or rule-based Savings Goal\n    - GET /savingsGoals/{id}\n      Get Savings Goal by ID\n    - DELETE /savingsGoals/{id}\n      Delete a Savings Goal\n    - PATCH /savingsGoals/{id}\n      Update Savings Goal by ID"}]}}
{"custom_id": "174.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Currency Exchange\nDESCRIPTION :\n      Currency Exchange REST API documentation\nENDPOINTS :\n    - GET /exchange\n      exchanges currencies\n    - GET /exchangeList\n      exchanges currencies"}]}}
{"custom_id": "175.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : External Transfer\nDESCRIPTION :\n      This API enables customer to transfer money from their Citizens account to their registered external (non-\n      Citizens) account. Below are the list of RESTFul operations exposed in this API; |**S. No.**| **Resource Name** |\n      **Operation type** | **Operation Description** | **New/Update/No Change** | | -- | -------------- | ------ |\n      ------------------ | -------------- | |  1.| /recurring | POST | Create a recurring transfers as per the consumer\n      defined details | New | |  2.| recurring/query | POST | Fetches all the recurring transfer accounts details | New\n      | |  3.| recurring/details/query | POST | Fetch the details of the recurring transfer that has been setup by [...]\nENDPOINTS :\n    - POST /recurring\n      Creates external transfer recurring plan.\n    - POST /line-of-credit\n      Creates Line of Credit  transfer request\n    - POST /recurring/query\n      To view external recurring transfers setup by customer.\n    - POST /line-of-credit/query\n      To view external recurring transfers setup by customer.\n    - PATCH /line-of-credit/{referenceNumber}\n      To patch line of credit transfers by reference number.\n    - POST /recurring/details/query\n      Allows the consumer to view the transfer details of a particular recurring transfer plan.\n    - DELETE /recurring/{recurringTransferId}\n      Cancels a recurring transfer plan.\n    - PATCH /recurring/{recurringTransferId}\n      Updates the recurring transfer plan and changes all subsequent transfers.\n    - DELETE /recurring/nextTransfer/{recurringTransferId}\n      Allows the consumer to cancel the next upcoming transfer in the recurring transfer plan.\n    - PATCH /recurring/nextTransfer/{recurringTransferId}\n      Allows the customer to edit the upcoming next recurring transfer in the recurring transfer plan.\n    - POST /recurring-scheduled/details/query\n      Allows consumer to view one time scheduled and recurring external transfers setup by the customer.\n    - POST /verification-data/query\n      Retrieves the account verification options offered by the bank."}]}}
{"custom_id": "176.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Block Chain Implementation\nDESCRIPTION :\n      My own implementation of the block chain logics\nENDPOINTS :\n    - GET /users/item/id\n      Get User Data for given ID\n    - GET /transactions/item/id\n      Get Transaction Data for given ID\n    - GET /contracts/item/id\n      Get Contract Data for given ID\n    - GET /blocks/item/id\n      Get Block Data for given ID\n    - POST /users/item\n      Create User\n    - POST /transactions/item\n      Create Transaction\n    - POST /contracts/item\n      Create Contract\n    - POST /blocks/item\n      Create Block"}]}}
{"custom_id": "177.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Accounts Microservice\nDESCRIPTION :\n      This microservice is responsible for account profile creation, managing  account profiles and resetting passwords\nENDPOINTS :\n    - POST /register/complete\n      UC-11 Complete Registration\n    - GET /profile/iscomplete\n      UC-127 Check User has completed profile"}]}}
{"custom_id": "178.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Endpoints\nDESCRIPTION :\n\nENDPOINTS :\n    - GET /v1/correlation\n      Correlation\n    - GET /v1/indices\n      Indices\n    - GET /v1/investor-grades\n      Investor Grades\n    - GET /v1/market-indicator\n      Market Indicator\n    - GET /v1/price\n      Price\n    - GET /v1/price-prediction\n      Price Prediction\n    - GET /v1/quantmetrics-tier-1\n      Quantmetrics Tier 1\n    - GET /v1/quantmetrics-tier-2\n      Quantmetrics Tier 2\n    - GET /v1/resistance-support\n      Resistance & Support\n    - GET /v1/scenario-analysis\n      Scenario Analysis\n    - GET /v1/sentiments\n      Sentiments\n    - GET /v1/tokens\n      Tokens\n    - GET /v1/trader-grades\n      Trader Grades\n    - GET /v1/trading-indicator\n      Trading Indicator"}]}}
{"custom_id": "179.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : ATM Locator API\nDESCRIPTION :\n\nENDPOINTS :\n    - GET /open-banking/v2.2/atms\n      This API will return data about all our ATMs and is prepared to the Open Banking standards as defined by the Open\n      Banking Implementation Entity (OBIE) in data dictionary version 2.2. It is regulated by the UK Competition and\n      Markets Authority (CMA). Data is only available for the United Kingdom.\n    - GET /x-open-banking/v2.2/atms/country/{country}\n      This extended API will return data about all ATMs in the specified country. It is based-on the Open Banking\n      standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended\n      functionality may not fully adhere to the non-functional requirements of the regulator. Data is only [...]\n    - GET /x-open-banking/v2.2/atms/country/{country}/town/{town}\n      This extended API will return data about all ATMs in the specified town. It is based-on the Open Banking standards\n      as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The extended\n      functionality may not fully adhere to the non-functional requirements of the regulator. Data is only [...]\n    - GET /x-open-banking/v2.2/atms/geo-location/lat/{latitude}/long/{longitude}\n      This extended API will data about all ATMs within a specified radius (1 to 10 miles) of the specified latitude and\n      longitude. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE)\n      in data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional [...]\n    - GET /x-open-banking/v2.2/atms/postcode/{postcode}\n      This extended API will return data about all ATMs within a 5 mile radius of the specified postcode. It is based-on\n      the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version\n      2.2. The extended functionality may not fully adhere to the non-functional requirements of the regulator. [...]"}]}}
{"custom_id": "18.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Simple Payments SE - Create Payment\nDESCRIPTION :\n      Create Payment\nENDPOINTS :\n    - POST /v9/users/{userId}/payments\n      This provides an endpoint to create a payment"}]}}
{"custom_id": "181.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Klarna Payments API V1\nDESCRIPTION :\n      The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon\n      as the purchase is completed the order should be read and handled using the [`Order Management\n      API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna\n      payments](https://docs.klarna.com/klarna-payments/).\nENDPOINTS :\n    - DELETE /payments/v1/authorizations/{authorizationToken}\n      Cancel an existing authorization\n    - POST /payments/v1/authorizations/{authorizationToken}/customer-token\n      Generate a consumer token\n    - POST /payments/v1/authorizations/{authorizationToken}/order\n      Create a new order\n    - POST /payments/v1/sessions\n      Create a new payment session\n    - GET /payments/v1/sessions/{session_id}\n      Read an existing payment session\n    - POST /payments/v1/sessions/{session_id}\n      Update an existing payment session"}]}}
{"custom_id": "182.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Payments\nDESCRIPTION :\n      The Payments API enables apps to submit payment transactions on Civic Platform records. The Payments API provides\n      two ways of accepting payments:    ***Using third-party payment vendors***    Payment API endpoints that save\n      payment information from an external third-party payment vendor, to which the user is redirected for payment\n      processing:    **Initialize Payment** - Initializes a Civic Platform payment transaction with a citizen's payment\n      information such as record ID, third-party merchant account ID, and payment method. The Initialize Payment API\n      returns a transaction ID which should be used as the payment ID when calling the Commit Payment API to save [...]\nENDPOINTS :\n    - POST /v4/payments/initialize\n      Initialize Payment\n    - PUT /v4/payments/{id}\n      Commit Payment\n    - PUT /v4/payments/{paymentId}/void\n      Void Payment\n    - GET /v4/payments/transactions/{id}/fees\n      Get Transaction Fees\n    - GET /v4/invoices/{invoiceIds}\n      Get Invoices\n    - GET /v4/trustAccounts\n      Get All Trust Accounts\n    - GET /v4/shoppingCart\n      Get All Shopping Carts\n    - POST /v4/shoppingCart\n      Create Shopping Cart\n    - GET /v4/shoppingCart/{ids}\n      Get Shopping Carts\n    - DELETE /v4/shoppingCart/{ids}\n      Delete Shopping Carts\n    - PUT /v4/shoppingCart/{id}\n      Update Shopping Cart"}]}}
{"custom_id": "183.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Authentiq API\nDESCRIPTION :\n      Strong authentication, without the passwords.\nENDPOINTS :\n    - DELETE /key\n      Revoke an Authentiq ID using email & phone.  If called with `email` and `phone` only, a verification code  will be\n      sent by email. Do a second call adding `code` to  complete the revocation.\n    - POST /key\n      Register a new ID `JWT(sub, devtoken)`  v5: `JWT(sub, pk, devtoken, ...)`  See:\n      https://github.com/skion/authentiq/wiki/JWT-Examples\n    - DELETE /key/{PK}\n      Revoke an Identity (Key) with a revocation secret\n    - GET /key/{PK}\n      Get public details of an Authentiq ID.\n    - HEAD /key/{PK}\n      HEAD info on Authentiq ID\n    - POST /key/{PK}\n      update properties of an Authentiq ID. (not operational in v4; use PUT for now)  v5: POST issuer-signed email &\n      phone scopes in a self-signed JWT  See: https://github.com/skion/authentiq/wiki/JWT-Examples\n    - PUT /key/{PK}\n      Update Authentiq ID by replacing the object.  v4: `JWT(sub,email,phone)` to bind email/phone hash;   v5: POST\n      issuer-signed email & phone scopes and PUT to update registration `JWT(sub, pk, devtoken, ...)`  See:\n      https://github.com/skion/authentiq/wiki/JWT-Examples\n    - POST /login\n      push sign-in request See: https://github.com/skion/authentiq/wiki/JWT-Examples\n    - POST /scope\n      scope verification request See: https://github.com/skion/authentiq/wiki/JWT-Examples\n    - DELETE /scope/{job}\n      delete a verification job\n    - GET /scope/{job}\n      get the status / current content of a verification job\n    - HEAD /scope/{job}\n      HEAD to get the status of a verification job\n    - POST /scope/{job}\n      this is a scope confirmation\n    - PUT /scope/{job}\n      authority updates a JWT with its signature See: https://github.com/skion/authentiq/wiki/JWT-Examples"}]}}
{"custom_id": "184.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : EzTransfersService\nDESCRIPTION :\n      Ez Transfers API between Avanz Bank and BAC Florida Bank.\nENDPOINTS :\n    - PUT /EzTransfersService/UpdateEzTransferBPStatus\n      Update BP to set the status approved or discarded\n    - POST /EzTransfersService/EzTransfersIncomingTransfer\n      Creates a new incoming transfer\n    - POST /EzTransfersService/EzTransfersValidateAccount\n      Validates accounts for incoming transfers"}]}}
{"custom_id": "185.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : NOWPayments API\nDESCRIPTION :\n      NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of\n      cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple \u2013\n      no excess.  # Sandbox  Before production usage, you can test our API using the Sandbox. Details can be found\n      [here](https://documenter.getpostman.com/view/7907941/T1LSCRHC)  # Authentication  To use the NOWPayments API you\n      should do the following:  *   Sign up at [nowpayments.io](https://nowpayments.io) *   Specify your outcome wallet\n      *   Generate an API key       # Standard e-commerce flow for NOWPayments API:  1.  API - Check API [...]\nENDPOINTS :\n    - GET /v1/estimate\n      Get estimated price\n    - GET /v1/min-amount\n      Get the minimum payment amount\n    - GET /v1/payment/\n      Get list of payments\n    - POST /v1/payment/{id}/update-merchant-estimate\n      Get/Update payment estimate\n    - GET /v1/payment/{payment_id}\n      Get payment status\n    - POST /v1/payout/{withdrawals-id}/verify\n      Verify payout\n    - GET /v1/sub-partner\n      Get sub-partners\n    - GET /v1/sub-partner/balance/{id}\n      Get sub-partner balance\n    - GET /v1/sub-partner/transfer/{id}\n      Get transfer\n    - GET /v1/sub-partner/transfers\n      Get all transfers\n    - GET /v1/subscriptions\n      Get many recurring payments\n    - GET /v1/subscriptions/plans\n      Get many plans\n    - GET /v1/subscriptions/plans/{plan-id}\n      Get one plan\n    - PATCH /v1/subscriptions/plans/{plan-id}\n      Update plan\n    - DELETE /v1/subscriptions/{sub_id}\n      Delete recurring payment\n    - GET /v1/subscriptions/{sub_id}\n      Get one recurring payment"}]}}
{"custom_id": "187.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Afluenta API - Argentina\nDESCRIPTION :\n      Service of personal data validation, credit rating and loan request\nENDPOINTS :\n    - POST /borrower/loan/request/pre-approval\n    - GET /helpers/loan/purposes/\n      Provide a list of purposes enabled by country according the Afluenta model\n    - GET /helpers/identities/{idcountry}\n      Provide a list of kind of identies enabled by countries to identify the customer"}]}}
{"custom_id": "188.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : eToroX HTTP Trading API\nDESCRIPTION :\n      eToroX HTTP Trading API\nENDPOINTS :\n    - GET /v1/time\n      Get the server time in ISO 8601 format including milliseconds\n    - GET /v1/currencies\n      Get available currencies\n    - GET /v1/instruments\n      Get available instruments for trading\n    - GET /v1/instruments/{instrumentId}/depth\n      Get the instrument depth\n    - GET /v1/instruments/{instrumentId}/timesales\n      Get the instrument time and sales data\n    - GET /v1/profile\n      Get profile\n    - GET /v1/orders\n      Get orders details\n    - POST /v1/orders\n      Place a new order\n    - DELETE /v1/orders\n      Cancel a previously placed orders\n    - GET /v1/orders/{clientOrderId}\n      Get a single order by client order id\n    - DELETE /v1/orders/{clientOrderId}\n      Cancel a previously placed order by client order id\n    - GET /v1/trades\n      Get a list of recent trades\n    - GET /v1/portfolio\n      Get portfolio data"}]}}
{"custom_id": "189.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Investment Change API\nDESCRIPTION :\n      API for processing investment changes in Defined Contribution plans. This includes fund transfer, fund\n      reallocation, elections towards future investment contributions, and auto rebalance elections.\nENDPOINTS :\n    - GET /investmentchange/eligibleBusinessProcesses\n      Get Investment Change Eligible Business Processes.\n    - GET /investmentchange/{businessProcessId}\n      Get Investment Change Business Process.\n    - POST /investmentchange/personInvestmentChange/validate\n      Validates an Investment Change Business Process.\n    - POST /investmentchange/personInvestmentChange\n      Commits Investment Change Business Process.\n    - PUT /investmentchange/personInvestmentChange/{businessProcessReferenceId}/cancel\n      Cancels a pending Investment Change Business Process."}]}}
{"custom_id": "19.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Payment Account Reference Inquiry API\nDESCRIPTION :\n      The Payment Account Reference Inquiry API is the unified Mastercard interface for allowing Mastercard Customers\n      involved in payment card acceptance -- whether Merchants, Acquirers, or Digital Activity Customers (DACs) -- to\n      enquire the PAR Vault for getting the PAR, when providing an Account Primary Account Number (PAN) linked to a\n      digitized PAN.\nENDPOINTS :\n    - POST /par/paymentaccountreference/1/0/getPaymentAccountReference\n      Submit an encrypted PAN to obtain the PAR linked to the account."}]}}
{"custom_id": "190.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Hypothekenverl\u00e4ngerung API\nDESCRIPTION :\n      API for fix mortgage extension.\nENDPOINTS :\n    - GET /offer-details\n      Finance data including mortgage(s) that can be renewed\n    - POST /offer-confirmation\n      Extends the chosen mortgage in Avaloq core system\n    - POST /interest-rates\n      Calculates and returns new interest rates based on the inputs from customer"}]}}
{"custom_id": "191.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Timezone Currency Country API\nDESCRIPTION :\n      # Description An api that allows the users to access the list of supported Countries, States, Currencies and\n      Timezones  # Endpoints  1. `/Countries`  2. `/TimeZones`  3. `/Currencies`   ## Helpful links  | Endpoint |\n      Helpful link |  | Countries| https://countrycode.org/|  | Timezones| https://www.timeanddate.com/time/zones/|  |\n      Currency | https://justforex.com/education/currencies|\nENDPOINTS :\n    - GET /Country\n      Get all countries\n    - GET /Timezone\n      Get all timezones\n    - GET /Currencies\n      Get all currencies"}]}}
{"custom_id": "192.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : NeoFinance PSD2 API\nDESCRIPTION :\n      # Summary The **NextGenPSD2** *Framework offers a modern, open, harmonised and interoperable set of  Application\n      Programming Interfaces (APIs) as the safest and most efficient way to provide data securely.  The NextGenPSD2\n      Framework reduces XS2A complexity and costs, addresses the problem of multiple competing standards  in Europe and,\n      aligned with the goals of the Euro Retail Payments Board, enables European banking customers to benefit from\n      innovative products and services ('Banking as a Service')  by granting TPPs safe and secure (authenticated and\n      authorised) access to their bank accounts and financial data.  The possible Approaches are:   * Redirect SCA [...]\nENDPOINTS :\n    - GET /oauth/v2/auth\n      This one must be given to client to get authorisation code (use authorisation server)\n    - POST /oauth/v2/token\n      Having authorisation code returns accessToken (use api server)\n    - POST /api/v1/{payment-service}/{payment-product}\n      Payment initiation request\n    - GET /api/v1/{payment-service}/{payment-product}/{paymentId}\n      Get Payment Information\n    - GET /api/v1/{payment-service}/{payment-product}/{paymentId}/status\n      Payment initiation status request\n    - GET /api/v1/{payment-service}/{payment-product}/{paymentId}/authorisations\n      Get Payment Initiation Authorisation Sub-Resources Request\n    - POST /api/v1/{payment-service}/{payment-product}/{paymentId}/authorisations\n      Start the authorisation process for a payment initiation\n    - GET /api/v1/{payment-service}/{payment-product}/{paymentId}/authorisations/{authorisationId}\n      Read the SCA Status of the payment authorisation\n    - GET /api/v1/accounts\n      Read Account List\n    - GET /api/v1/list/accounts\n      Read Account List\n    - GET /api/v1/accounts/{account-id}\n      Read Account Details\n    - GET /api/v1/accounts/{account-id}/balances\n      Read Balance\n    - GET /api/v1/accounts/{account-id}/transactions/\n      Read transaction list of an account\n    - GET /api/v1/accounts/{account-id}/transactions/{resourceId}\n      Read Transaction Details\n    - POST /api/v1/consents\n      Create consent\n    - GET /api/v1/consents/{consentId}\n      Get Consent Request\n    - DELETE /api/v1/consents/{consentId}\n      Delete Consent\n    - GET /api/v1/consents/{consentId}/status\n      Consent status request"}]}}
{"custom_id": "193.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Credit API\nDESCRIPTION :\n      ARF provides Credit API that enables you to initiate international money transfers using Arf Credit\nENDPOINTS :\n    - GET /api/transactions/payouts\n      List Payouts\n    - POST /api/transactions/payouts\n      Create Payout\n    - POST /api/rate/quotation\n      Create Quotation\n    - GET /api/accounts\n      List Accounts\n    - POST /api/accounts\n      Create Sender, Beneficiary Accounts\n    - GET /api/transactions/payouts/{payout_id}\n      Retrieve Payout\n    - GET /api/accounts/{account_id}\n      Retrieve Account"}]}}
{"custom_id": "194.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Instant Payment Transfer (IPT)\nDESCRIPTION :\n      The Instant Payment Transfer API will enable a financial institution to send another financial institution an\n      instant payment via an API\nENDPOINTS :\n    - POST /fi/instant\n      Initiate Instant Payment"}]}}
{"custom_id": "195.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : cryptoterminal.io\nDESCRIPTION :\n      These are the available APIs for Cryptoterminal.  You can find  out more about Cryptoterminal at\n      [http://cryptoterminal.io](http://cryptoterminal.io)\nENDPOINTS :\n    - GET /alert\n      Get alerts without any filter (15 per request)\n    - GET /alert/coin/{coin}\n      filter alerts by coin\n    - GET /alert/exchange/{exchange}\n      filter alerts by exchange\n    - GET /alert/coin/{coin}/{exchange}\n      filter alerts by coin and exchange\n    - GET /headline\n      Get headlines without any filter (15 per request)\n    - GET /headline/coin/{coin}\n      filter headlines by coin\n    - GET /headline/source/{source}\n      filter alerts by source\n    - GET /headline/search/{searchString}\n      filter alerts by search string\n    - GET /price/{coin}/{exchange}/{period}\n      Get price data for coin by exchange and period"}]}}
{"custom_id": "196.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : BaobabCoreAPI\nDESCRIPTION :\n      Baobab core banking service API\nENDPOINTS :\n    - GET /customer/{country_code}/{customer_id}\n      Get Customer Information\n    - PATCH /customer/{country_code}/{customer_id}\n      Update Customer Information\n    - GET /loans/{country_code}/{loan_id}\n      Get Loan Record Details\n    - GET /loans/{country_code}/nano/products\n      Get Nano Loan Products\n    - GET /loans/{country_code}/nano/{product_code}/check/{loan_amount}\n      Check Nano Loan Amount\n    - POST /loans/{country_code}/nano\n      Disburse New Nano Loan\n    - POST /loans/{country_code}/nano/repay\n      Repay Nano Loan\n    - GET /\u200btransfer\u200b/{country_code}\u200b/fee\n      Get Fund Transfer Fee\n    - GET /transfer/{country_code}/mytransfer/{account_number}\n      Get List Of Fund Transfer Transactions\n    - GET /transfer/{country_code}/mobilewalletoperators\n      Get Mobile Wallet Operators By Country\n    - POST /transfer/{country_code}/intrabank\n      Baobab To Baobab Fund Transfer\n    - POST /transfer/{country_code}/authenticate\n      Authenticate Fund Transfer Request\n    - POST /transfer/{country_code}/mobilewallet\n      Fund Transfer Between Mobile Wallet And Baobab Account"}]}}
{"custom_id": "197.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Fintech Clearing API v2\nDESCRIPTION :\n      This API is used to add and update clearing information for investments to FintechClearing.com.\nENDPOINTS :\n    - POST /v2/investments\n      Add a new investment for an offering\n    - PUT /v2/investments/{uuid}\n      Update an investment for an offering with new data"}]}}
{"custom_id": "198.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Credit/Charge Card\nDESCRIPTION :\n      API Specification for Credit/Charge Card Service Domain\nENDPOINTS :\n    - GET /credit_card/{account_id}\n      Retrieve Account\n    - GET /credit_card/{account_id}/account_holder\n      Retrieve Account Holder\n    - GET /credit_card/{account_id}/balance\n      Retrieve Balance\n    - PUT /credit_card/{account_id}/billing/execution\n      Execute Billing\n    - GET /credit_card/{account_id}/interests\n      Retrieve Interests\n    - GET /credit_card/{account_id}/interests/{name}\n      Retrieve Named Interest\n    - GET /credit_card/{account_id}/interests/{name}/rate\n      Retrieve Named Interest Rate\n    - PUT /credit_card/{account_id}/transactions/execution\n      Execute Transaction\n    - GET /credit_card/{account_id}/transactions/{txn_id}\n      Retrieve Transaction"}]}}
{"custom_id": "199.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Integration Hub\nDESCRIPTION :\n      This APIs interact with Bitcoin, Ethereum and ThorsHammer blockchain\nENDPOINTS :\n    - GET /registerToken\n      Get API Token\n    - GET /btcmainnet/getblockcount\n      Get current block number\n    - GET /btcmainnet/getbestblockhash\n      Get best block hash\n    - POST /btcmainnet/getblock\n      Get block details from a block hash\n    - GET /btcmainnet/getblockchaininfo\n      Get blockchain information\n    - POST /btcmainnet/getblockhash\n      Get block hash from a block number\n    - POST /btcmainnet/getblockheader\n      Get information about blockheader\n    - POST /btcmainnet/getblockstats\n      Get information about block statistic\n    - GET /btcmainnet/getdifficulty\n      Get information about POW difficulty\n    - GET /btcmainnet/getmemoryinfo\n      Get information about memory usage\n    - GET /btcmainnet/uptime\n      Get information about uptime\n    - GET /btcmainnet/getconnectioncount\n      Get information about connection count\n    - GET /btcmainnet/getnettotals\n      Get information about network summary\n    - GET /btcmainnet/getpeerinfo\n      Get information about each connected network node\n    - GET /btcmainnet/ping\n      P2P ping\n    - POST /btcmainnet/getutxobyaddress\n      Address UTXO\n    - POST /btcmainnet/getbalancebyaddress\n      Address balance\n    - POST /btcmainnet/gettransactionbytxid\n      Transaction by transaction hash\n    - POST /btcmainnet/gettransactionbyaddress\n      Transaction by address\n    - POST /btcmainnet/createrawtransaction\n      Create raw transaction"}]}}
{"custom_id": "2.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : UPBOND NFT WALLET DOCUMENTATION\nDESCRIPTION :\n      This is an example of using Upbond nft wallet documentation\nENDPOINTS :\n    - POST /integration-new-wallet\n      Create new address\n    - GET /wallet/profile\n      Get Wallet\n    - POST /integration-mint\n      Mint new nft\n    - GET /integration-detail/{id}\n      Get Detail\n    - POST /integration-purchase/{id}\n      Purchase NFT\n    - GET /owned/{address}\n      Gets NFTs owned\n    - GET /token-owners/{address}/{token_id}\n      Gets NFTs token owner\n    - GET /transaction/{id}\n      Get Detail Transaction\n    - GET /nft/{address}/{token_id}\n      Get NFT Metadata"}]}}
{"custom_id": "20.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Banking API\nDESCRIPTION :\n      Codat's Banking API allows you to access standardised data from over bank accounts via third party providers.\n      Standardize how you connect to your customers\u2019 bank accounts. Retrieve bank account and bank transaction data in\n      the same way via our partnerships with Plaid and TrueLayer.  [Read more...](https://docs.codat.io/banking-\n      api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)\nENDPOINTS :\n    - GET /companies/{companyId}/connections/{connectionId}/data/banking-accountBalances\n      List account balances\n    - GET /companies/{companyId}/connections/{connectionId}/data/banking-accounts\n      List accounts\n    - GET /companies/{companyId}/connections/{connectionId}/data/banking-accounts/{accountId}\n      Get account\n    - GET /companies/{companyId}/connections/{connectionId}/data/banking-transactionCategories\n      List all transaction categories\n    - GET /companies/{companyId}/connections/{connectionId}/data/banking-transactionCategories/{transactionCategoryId}\n      Get transaction category\n    - GET /companies/{companyId}/connections/{connectionId}/data/banking-transactions\n      List transactions\n    - GET /companies/{companyId}/connections/{connectionId}/data/banking-transactions/{transactionId}\n      Get bank transaction\n    - GET /companies/{companyId}/data/banking-transactions\n      List banking transactions"}]}}
{"custom_id": "202.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : API Support - Business Banking - Interbank Transfer Order V1\nDESCRIPTION :\n      API Support For Manage Interbank Transfer order <br> <b>Service Domain:</b> `Payment Order`  <br>\nENDPOINTS :\n    - GET /interbank-transfer-orders\n      Allows obtaining the details of a interbank transfer order.\n    - POST /interbank-transfer-orders\n      Allows you to save the header of a interbank transfer order.\n    - PATCH /interbank-transfer-orders/{orderId}\n      Update a Interbank transfer Order\n    - PUT /interbank-transfer-orders/test/{orderId}\n      Update a Interbank transfer Order Complete\n    - POST /interbank-transfer-orders/interbank-transfer-order-items\n      Allows you to record the detail of a interbank transfer order."}]}}
{"custom_id": "204.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Market Data API\nDESCRIPTION :\n\nENDPOINTS :\n    - POST /oauth/token\n      Client Credentials\n    - GET /asset\n      List all assets\n    - GET /asset/{id}\n      Retrieve an asset\n    - GET /market\n      List all markets\n    - GET /market/{id}\n      Retrieve a market\n    - GET /exchange\n      List all exchanges\n    - GET /exchange/{id}\n      Retrieve an exchange\n    - GET /exchange-ticker\n      List all exchange tickers\n    - GET /index-ticker\n      Get intraday\n    - GET /ohlcv\n      Get end of day Open, High, Low, Close, Volumes\n    - GET /market-cap\n      List the market capitalisation for assets\n    - GET /derivatives/contract/{derivative_type}\n      List all contracts\n    - GET /derivatives/contract/{derivative_type}/{id}\n      Retrieve a contract\n    - GET /derivatives/ticker/{derivative_type}\n      Get tickers\n    - GET /convert\n      Convert the value of one asset into another asset"}]}}
{"custom_id": "205.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : accounting:clients\nDESCRIPTION :\n      API for retrieving information about accounting clients.\nENDPOINTS :\n    - GET /accounting/v2/clients\n      Returns a list of clients.\n    - GET /accounting/v2/clients/{client-id}\n      Retrieve a specific client."}]}}
{"custom_id": "206.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Shopper Shipping\nDESCRIPTION :\n      This API will be used to manage packages that need to be shipped to customers.\nENDPOINTS :\n    - GET /customer\n      Get a list of all customers\n    - POST /customer\n      Create a new customer\n    - DELETE /customer\n      Delete all customer in system (only available for testing)\n    - GET /customer/{id}\n      Get a single customer record\n    - DELETE /customer/{id}\n      Delete a customer\n    - GET /customer/{id}/packages\n      Get a list of packages for a given customer\n    - POST /customer/{id}/packages\n      Create a new package\n    - DELETE /customer/{id}/packages\n      Delete a packages\n    - GET /customer/{cid}/packages/{pid}\n      Get a single package"}]}}
{"custom_id": "207.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Financial Planning Domain Service\nDESCRIPTION :\n      Financial Planning Domain Service\nENDPOINTS :\n    - GET /clients/{clientId}/insurance-policies\n      Gets the insurance policies for the client\n    - PUT /insurance-policies/bulk\n      Updates the insurance policies for the client\n    - POST /insurance-policies/bulk\n      Creates the insurance policies for the client\n    - DELETE /insurance-policies/bulk\n      Deletes the insurance policies for the client\n    - GET /clients/{clientId}/estate-plan\n      Gets the estate plans for the client\n    - PUT /clients/{clientId}/estate-plan\n      Updates the estate plan for the client\n    - GET /clients/{clientId}/tax-plan\n      Gets the tax plan for the client\n    - PUT /clients/{clientId}/tax-plan\n      Updates the tax plan for the client\n    - POST /risk-tolerances/mgp\n      Creates the MoneyGuidePro Risk Tolerances for the client\n    - POST /risk-tolerances\n      Creates a new risk tolerance result for the client\n    - POST /risk-tolerances-token\n      Creates a new risk tolerance result authorized via token\n    - GET /clients/{clientId}/risk-tolerances\n      Gets the risk tolerance for the client\n    - GET /households/{householdId}/risk-tolerances\n      Get risk tolerance from given household\n    - GET /clients/{clientId}/financial-priorities\n      Returns the list of Financial Priorities for the client\n    - PUT /clients/{clientId}/financial-priorities\n      Updates the given financial priorities for a client\n    - POST /financial-goals\n      Creates a financial priority goal\n    - PUT /financial-goals/{goalId}\n      Updates the given financial priority goal\n    - DELETE /financial-goals/{goalId}\n      Deletes a financial priority goal"}]}}
{"custom_id": "208.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : BasicCreditService\nDESCRIPTION :\n\nENDPOINTS :\n    - POST /BasicCreditInitializeRequest\n    - POST /BasicCreditCalculatePoSRequest"}]}}
{"custom_id": "209.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : ts.crypto.platform.wallets.api\nDESCRIPTION :\n      Crypto Wallets API is going to support REST and WebSocket endpoint that will act as a proxy between Web API and\n      Deltix. Web API requests will contain Brokerage Account Number whereever possible.     The Crypto Wallets API will\n      provide the Crypto ID (from the bearer token supplied by Web API Request) and Brokerage Account Number to User\n      Relationship Service and retrive associated Deltix User ID and permissions for given cryptoId on the brokerage\n      account Number (Owner, AuthorizedTrader etc.). Based on the roles, Crypto Wallets API will make a decision on\n      whether to call Deltix APIs/Websockets or not.    In Order to support one account calling APIs/Websocket on [...]\nENDPOINTS :\n    - GET /api/v1/Accounts/{accountNumber}\n      Get Crypto Accounts by Brokerage Account Number\n    - GET /api/v1/Currencies/{accountNumber}\n      Get Currencies by Brokerage Account Number\n    - GET /ws/v1/Balances\n      Subscribe Balances"}]}}
{"custom_id": "21.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : PhantAuth\nDESCRIPTION :\n      Random User Generator + OpenID Connect Provider. Like Lorem Ipsum, but for user accounts and authentication.  The\n      PhantAuth API documentation is available on the following API documentation sites:  -\n      [apiary](https://phantauth.docs.apiary.io) (primary source)  - [speca](https://speca.io/phantauth/phantauth)  -\n      [PhantAuth Developer Portal](https://www.phantauth.net/api)  ### TL;DR  **PhantAuth was designed to simplify\n      testing for applications using OpenID Connect authentication by making use of random generated users.**  endpoint\n      | address --------- | ------- issuer    | https://phantauth.net discovery | https://phantauth.net/.well- [...]\nENDPOINTS :\n    - POST /client\n      Create a Client Selfie\n    - GET /client/{client_id}\n      Get a Client\n    - GET /client/{client_id}/token/{kind}\n      Get a Client Token\n    - GET /domain/{domainname}\n      Get a Domain\n    - GET /fleet/{fleetname}\n      Get a Fleet\n    - GET /team/{teamname}\n      Get a Team\n    - GET /tenant/{tenantname}\n      Get a Tenant\n    - POST /user\n      Create a User Selfie\n    - GET /user/{username}\n      Get a User\n    - GET /user/{username}/token/{kind}\n      Get a User Token"}]}}
{"custom_id": "210.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Credibly - Preapproval API\nDESCRIPTION :\n      Preapproval service gives an instant decision on whether a merchant is prequalified for a loan using business and\n      owner details.\nENDPOINTS :\n    - POST /do\n      Do prequalify and check eligible offers without submit\n    - POST /submitApplication\n      Submit an application for process and get prequalified offers. Also takes supporting documents.\n    - POST /uploadDocuments\n      Add document to submitted application with loan or preapproval response id\n    - GET /get\n      Retrieve prequalified offer details"}]}}
{"custom_id": "211.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Trade Monitor\nDESCRIPTION :\n      This is the backend API for the Trade Monitor\nENDPOINTS :\n    - GET /overview\n      Get trades overview\n    - GET /last_messages\n      Last messages\n    - GET /trade/{source}/{trade_id}\n      Trade detailed information\n    - GET /trade/{source}/{trade_id}/messages\n      Trade messages"}]}}
{"custom_id": "212.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Lender Decisioning Apis\nDESCRIPTION :\n      APIs for lenders to implement to integrate with Deko platform. Minimum requirement is to support POST /loan-\n      application and GET /loan-application to allow single submisson. PATCH endpoints are available as optional to have\n      an ability to submit/build loan-application in stages.\nENDPOINTS :\n    - POST /v1/loan-application\n      Submit a loan application and get decisioning\n    - GET /v1/loan-application/{loan-id}\n      Fetch a loan application\n    - POST /v1/loan-application/{loan-id}/decision\n      Decide if a user is allowed a loan\n    - GET /v1/loan-application/{loan-id}/decision/{decision-id}\n      Fetch a decision that was issued earlier for a given loan application\n    - PATCH /v1/loan-application/{loan-id}/personalDetails\n      Update personal details for an existing loan applicant\n    - PATCH /v1/loan-application/{loan-id}/personalDetails/financialStatus\n      Update financial status for an existing loan applicant\n    - PATCH /v1/loan-application/{loan-id}/bankDetails\n      Update bank details status for an existing loan applicant\n    - PATCH /v1/loan-application/{loan-id}/fraudCheck\n      Update fraudCheck status for an existing loan applicant\n    - PATCH /v1/loan-application/{loan-id}/shoppingDetails\n      Update shopping details for an existing loan applicant\n    - PATCH /v1/loan-application/{loan-id}/shoppingDetails/shippingDetails\n      Update shipping details for an existing loan applicant"}]}}
{"custom_id": "213.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : H24 Max mortgage calculation API\nDESCRIPTION :\n      Calculates the max mortgage amount available based on input parameters and currently available mortgages (uses\n      real interest rates instead of a key interest value)\nENDPOINTS :\n    - POST /max-mortgage\n      Calculate max mortgage"}]}}
{"custom_id": "214.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : DN Online Mobile API\nDESCRIPTION :\n      Public Online Mobile API of Diebold Nixdorf to access the Transaction Middleware.\nENDPOINTS :\n    - GET /getAccounts\n      Get the account list of a consumer\n    - GET /getAccountTypes\n      Returns a list of supported account types\n    - GET /getTransactions\n      Returns all transactions of a given account.\n    - GET /getScheduledTransactions\n      Returns an array of transactions for the given account, which are scheduled to be executed in the future.\n    - GET /getAccountDetails\n      Returns detailed informations regarding a given account.\n    - POST /createTransfer\n      create a Cashtransfer\n    - POST /createCashout4Me\n      Create a prestaged cash out for the consumer himself.\n    - POST /createCashout2You\n      Create a prestaged cash out transaction for different person. Attention: If a bankCode if given in the\n      sourceAccount member of the request, it is checked, if the bankCode (aka routingCode) exists in the PC/E master\n      data! To be precise: It is checked, if that bankCode (routingCode) exists in the master data table [...]\n    - POST /deletePrestagedTransaction\n      Delete an already created prestaged transaction.\n    - GET /getPrestagedTransactions\n      Get the list of all prestaged transactions of a consumer..\n    - POST /getLocations\n      get all locations\n    - GET /getPreferences\n      Get a list of user defined parameters.\n    - POST /setPreferences\n      Set a list of user defined parameters, which can be used to store any information.\n    - GET /getClientBranding\n      Get the client branding file.\n    - POST /updateAccountNickName\n      update the account nickname"}]}}
{"custom_id": "215.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Savings Accounts Service\nDESCRIPTION :\n      This suite of APIs can be used to review the savings accounts beloging to a Direct Wines customer.\nENDPOINTS :\n    - GET /api/user/savingsaccounts\n      Get a list of Savings Accounts for the current authenticated user.\n    - GET /api/user/savingsaccounts/{accountId}\n      Get summary details about a Savings Account including the balance.\n    - GET /api/user/savingsaccounts/statement/{accountId}\n      Get a list of transaction details for the specified account."}]}}
{"custom_id": "216.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Extension 3: Setting up saving Goals\nDESCRIPTION :\n       In this extension we want to assist the user in saving up money for specific goals,  such as a new car or a\n      holiday. Each month we will put a certain amount into a \"savings jar\" until the target amount has been reached.\n      This amount will remain in the account, but not be shown in the balance of the account.  It starts with the user\n      setting up a savings goal. The user can specify the name and the amount of the savings goal, such as \"China\n      Holiday\" and \u20ac5000. The user also needs to specify the amount that should be set aside each month. Optionally the\n      user can specify a minimal balance that should be on the account before money is set aside. The default for [...]\nENDPOINTS :\n    - GET /savingGoals\n      Get the saving goals\n    - POST /savingGoals\n      Create a new saving goal\n    - DELETE /savingGoals/{savingGoalId}\n      Delete categoryRule by ID"}]}}
{"custom_id": "217.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Personal Loan Extend\nDESCRIPTION :\n      This Loans service provides the operations related to loans.\nENDPOINTS :\n    - GET /loans/personal-loans/{key}/extend\n      Inquiry Personal Loan Extend details .\n    - POST /loans/personal-loans/{key}/extend\n      Accepts the Loan Extend."}]}}
{"custom_id": "218.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : NeedsAnalysisRetirement\nDESCRIPTION :\n      Retirement Planning API\nENDPOINTS :\n    - GET /needsanalysisretirement\n      Auto generated using Swagger Inspector\n    - POST /needsanalysisretirement\n      Auto generated using Swagger Inspector"}]}}
{"custom_id": "219.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Duobank APIs\nDESCRIPTION :\n      Duobank APIs\nENDPOINTS :\n    - GET /users\n      retrieves all users\n    - GET /user\n      retrieves specific user by id\n    - PUT /user\n      replaces the user info\n    - POST /user\n      adds a new user\n    - DELETE /user\n      deletes specific user\n    - PATCH /user\n      modifies the user info\n    - POST /login\n      logs in a user and generates a JWT token to be used in user specific operations\n    - GET /applications\n      retrieves applications for a specific user\n    - GET /application\n      retrieves application details by id"}]}}
{"custom_id": "22.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Balance Transfer\nDESCRIPTION :\n      The Balance Transfer API enables you to transfer money between Tilia wallets in a way that doesn't imply payment\n      processing i.e. without taxes, currency conversion, receipts, refunds or product delivery. Each balance transfer\n      request results in a single invoice, with a line item and subitem for each balance transfer in the request. For a\n      given balance transfer, either the source or destination wallet or both must belong to the primary account.  #\n      Authentication  <!-- ReDoc-Inject: <security-definitions> -->\nENDPOINTS :\n    - POST /transfer\n      Balance transfer\n    - GET /transfer/{balance_transfer_id}\n      Get balance transfer"}]}}
{"custom_id": "220.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Recipient Microservice\nDESCRIPTION :\n      This is a recipient microservice, recipients can be added, updated,read and deleted by the user, other\n      microservices such as user microserice and transcation micrservice will be calling it to perfrom respective CRUD\n      operations.The base uri for the url should be ->> http://<host-name>/api/recipient-detail for example ->>\n      http://localhost:3005/api/recipient-detail\nENDPOINTS :\n    - GET /recipients\n      get all the recipients created by post call\n    - POST /recipients\n      adds a recipient\n    - GET /recipients/{user_id}\n      Fetch Recipient\n    - PUT /recipients/{user_id}\n      Updated Recipient\n    - DELETE /recipients/{user_id}\n      Delete Recipient"}]}}
{"custom_id": "221.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : CryptoBanking: Crypto Trading\nDESCRIPTION :\n      APIs focused on enrollment into Crypto Currency Trading and the ability to create/view orders for buying and\n      selling crypto currencies.\nENDPOINTS :\n    - GET /customers/{customerId}/profile\n      Retrieve customer enrollment profile\n    - PUT /customers/{customerId}/enrollment\n      Update customers enrollment information.\n    - POST /customers/{customerId}/enrollment\n      Enroll customer in crypto-currency.\n    - GET /customers/{customerId}/accounts/balances\n      Retrieve balances for the customers accounts\n    - GET /accounts/{protectedAccountId}\n      Retrieve crypto account details\n    - PUT /accounts/{protectedAccountId}/related-accounts\n      Relink crypto account to deposit account\n    - GET /accounts/{protectedAccountId}/transaction-history\n      Common transaction history\n    - POST /orders\n      Create new cryptocurrency order\n    - POST /orders/{orderQuoteId}/confirm\n      Confirm cryptocurrency order\n    - GET /documents\n      Retrieve list of documents.\n    - GET /receipts/{receiptId}\n      Retrieve receipt."}]}}
{"custom_id": "222.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Agrocura Commodity API\nDESCRIPTION :\n      API Documentation for Agrocura Commodity system\nENDPOINTS :\n    - POST /customer-auth/request-otp\n      Request OTP code for customer to login\n    - POST /customer-auth/login\n      Login to the customer profile\n    - GET /customer-auth/current\n      Fetches the currently logged in user from the token"}]}}
{"custom_id": "223.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Romulus API Documentation - Loan Document Processing\nDESCRIPTION :\n      This API documentation details how loan document can be processed using Romulus. It describes - authentication\n      flow - uploading a new loan document in Romulus - viewing details of all loan documents present in Romulus -\n      modifying output of any document and saving it as a new version\nENDPOINTS :\n    - GET /outh2/authorize\n    - POST /file_upload\n      Upload a pdf document to process.\n    - POST /document_search\n      Get list of all the uploaded documents\n    - GET /stream/{document_id}\n      Stream pdf document content\n    - GET /document_search/{document_id}\n      get extracted data of the required document having requested document_id\n    - PUT /document_search/{document_id}\n      Create a new version of document with updating the JSON\n    - GET /document_search/{document_id}/{version}\n      Get document details of a version of a document having given document_id and the version of that document"}]}}
{"custom_id": "224.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Transfer Money API\nDESCRIPTION :\n      2 APIs to retrieve balance and create transactions.\nENDPOINTS :\n    - GET /retrieve\n      Retrieve the current balance.\n    - POST /create\n      Create transaction."}]}}
{"custom_id": "226.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : fastFOREX.io\nDESCRIPTION :\n      Foreign currency exchange rate API\nENDPOINTS :\n    - GET /fetch-one\n      Fetch a single currency exchange rate\n    - GET /fetch-multi\n      Fetch multiple currency rates at once\n    - GET /fetch-all\n      Fetch all available currency rates\n    - GET /convert\n      Convert an amount of one currency into another currency\n    - GET /currencies\n      Fetch a list of supported currencies\n    - GET /usage\n      Fetch recent usage data for the supplied API key"}]}}
{"custom_id": "227.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Service Mortgage API\nDESCRIPTION :\n\nENDPOINTS :\n    - POST /service-mortgage/secure/api/v1/applications\n      Create new application"}]}}
{"custom_id": "228.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : findl API\nDESCRIPTION :\n      Welcome to the findl Web API v1.0. <br/><br/> Stock Market Data - Comprehensive financial  statement and stock\n      price data for US public companies. <br/><br/> The API is RESTful and easy to integrate with.\nENDPOINTS :\n    - GET /v1.0/data/descriptions\n      Indicator Descriptions\n    - GET /v1.0/data/fundamentals\n      Fundamentals\n    - GET /v1.0/data/stocks\n      Equity Prices\n    - GET /v1.0/data/funds\n      Fund Prices\n    - GET /v1.0/data/actions\n      Corporate Actions\n    - GET /v1.0/data/sp500\n      S&P500 Constituents\n    - GET /v1.0/data/metrics\n      Price Based Metrics\n    - GET /v1.0/data/insiders\n      Insiders\n    - GET /v1.0/data/tickers\n      Tickers and Metadata\n    - GET /v1.0/data/daily\n      Daily Metrics\n    - GET /v1.0/data/holdings\n      Institutional Investors\n    - GET /v1.0/data/holdings_ticker\n      Institutional Investors Summary by Ticker\n    - GET /v1.0/data/holdings_investor\n      Institutional Investors Summary by Investor"}]}}
{"custom_id": "229.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Finfra API reference\nDESCRIPTION :\n      ## API Reference The FINFRA API is designed with a RESTful architecture in mind. With an emphasis on resource-\n      oriented pathways, it supports form-encoded requests and provides responses in JSON format, adhering to\n      conventional HTTP protocols, authentication mechanisms, and methods. While interacting with the FINFRA API, users\n      have the ability to engage in a test environment, which has no impact on actual data and does not connect with\n      banking infrastructures. The nature of the API key used during requests is pivotal, as it determines whether the\n      actions are affecting the live environment or are restricted to test mode. Bulk operations are not a feature [...]\nENDPOINTS :\n    - POST /api/auth/token\n      Generate access token\n    - POST /api/documents\n      Create document object\n    - PATCH /api/documents\n      Update multiple documents description and type\n    - POST /api/core/users\n      Create partner borrower\n    - PATCH /api/core/users/{userId}\n      Update single partner borrower\n    - POST /api/core/users/{userId}/approve\n      Approve borrower\n    - POST /api/core/users/{userId}/block\n      Block borrower\n    - POST /api/core/users/{userId}/rdf/verify-biometric\n      Verify borrower biometric\n    - POST /api/core/users/rdf/status\n      Update borrower RDF status\n    - POST /api/core/users/{userId}/rdf/accounts\n      Create borrower RDF account\n    - POST /api/core/ftm/users/{callbackTitle}/status\n      Create Borrower Callback\n    - POST /api/core/ftm/users/{endpointKey}/{userId}\n      verify and score borrower\n    - POST /api/core/loans/{userId}\n      Create Single Payment Loans\n    - POST /api/core/loans/{userId}/bnpl\n      Create Installment Payment Loans\n    - GET /errors/{error_code}\n      Error example"}]}}
{"custom_id": "23.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : OpenBanking API\nDESCRIPTION :\n      API for open-banking (psd2).\nENDPOINTS :\n    - GET /api/aspsps/{countryCode}\n      Retreive lists of ASPSPS for requested contry\n    - POST /api/customers\n      Init client's onboarding process (customer creation) for retrieveing SCA redirect URL to accept consents in\n      his/her bank.\n    - POST /api/customers/authorization\n      Sends authorization code to ASPSP and compares onboarding customer details with these from ASPSP\n    - POST /api/customers/payments\n      Init customers's payment process for retrieveing SCA redirect URL to accept consents for this payment in his/her\n      bank.\n    - POST /api/customers/payments/authorization\n      Sends authorization code to ASPSP to accept payment transfer"}]}}
{"custom_id": "230.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Finmo Lender API\nDESCRIPTION :\n      Finmo Lender API\nENDPOINTS :\n    - GET /submissions/{lenderId}\n      Gets submissions\n    - GET /submissions/{lenderId}/{submissionId}\n      Gets a submission\n    - POST /submissions/{lenderId}/{submissionId}/createFile\n      Generates a Signed URL to be used to upload commitment letter\n    - POST /submissions/{lenderId}/{submissionId}/approve\n      Approves a submission\n    - POST /submissions/{lenderId}/{submissionId}/decline\n      Declines a submission\n    - POST /submissions/{lenderId}/{submissionId}/clearStatus\n      Clears submission status\n    - POST /submissions/{lenderId}/{submissionId}/readFile\n      Obtains a download link for files associated with this submission\n    - POST /YOUR_SERVERS_URL\n      Requests are made to external URLs from Finmo when events happen related to your lender"}]}}
{"custom_id": "231.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Kafka Topics - Loans\nDESCRIPTION :\n      Add Loan Core data kafka topic\nENDPOINTS :\n    - PATCH /loans.availability/{productKey}\n      <b>Topic Name </b> loans.availability <br><b>Topic Key  </b>productKey\n    - PATCH /loans.balances/{productKey}\n      <b>Topic Name </b> loans.balances <br><b>Topic Key  </b>productKey\n    - PATCH /loan.statement/{productKey}\n      <b>Topic Name </b> loan.statement <br><b>Topic Key  </b>productKey\n    - PATCH /loan.loanFees/{productNumber}\n      <b>Topic Name </b> loan.loanFees <br><b>Topic Key  </b>productNumber\n    - PATCH /loan.loan/{productNumber}\n      <b>Topic Name </b> loan.loan <br><b>Topic Key  </b>productNumber"}]}}
{"custom_id": "233.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : NFT API\nDESCRIPTION :\n      API for fetching NFT data on Ethereum and Polygon. NOTE this API is in BETA and not yet available to the public.\nENDPOINTS :\n    - GET /getNFTs\n      Gets all NFTs currently owned by a given address\n    - GET /getNFTMetadata\n      Gets the metadata associated with a given NFT."}]}}
{"custom_id": "234.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Client Financials API\nDESCRIPTION :\n      Client Financials API\nENDPOINTS :\n    - GET /financials\n      Searches Client Financials\n    - PUT /financials\n      Updates a Client Financial record"}]}}
{"custom_id": "235.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Trade Finance Undertaking API\nDESCRIPTION :\n      Manage all processes involved in the life cycle of a Trade Finance Undertaking application between corporate and\n      banks :              `The API supports following functionalities:` * Request for application :  Sent by the party\n      requesting issuance of the undertaking (applicant or obligor) to the party issuing the undertaking (demand\n      guarantee or standby letter of credit or dependent undertaking or counter-guarantee or counter-standby) and\n      provides details on the applicable rules, terms, conditions and content of the undertaking to be issued. *\n      Amendment of an already issued undertaking (reduction, release, extend, cancellation or termination) * [...]\nENDPOINTS :\n    - GET /trade-finance-undertakings\n      Get Trade Finance Undertaking.\n    - POST /trade-finance-undertakings\n      Create Trade Finance Undertaking.\n    - GET /trade-finance-undertakings/{application-reference}\n      Get Trade Finance Undertaking.\n    - PUT /trade-finance-undertakings/{application-reference}\n      Replace Trade Finance Undertaking.\n    - PATCH /trade-finance-undertakings/{application-reference}\n      Update Trade Finance Undertaking.\n    - POST /trade-finance-undertakings/{application-reference}/payment-demand\n      Request Payment."}]}}
{"custom_id": "236.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Direct Debit Mandate Request & Response\nDESCRIPTION :\n      This is the Mandate Request & Response.\nENDPOINTS :\n    - POST /mandates\n      Mandate Creation Validation\n    - PUT /mandates\n      Mandate Amend Validation\n    - DELETE /mandates\n      Mandate Cancel & Suspend Validation\n    - POST /release\n      Release Request"}]}}
{"custom_id": "237.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Fintech API Documentation\nDESCRIPTION :\n      Fintech API Documentation\nENDPOINTS :\n    - POST /save-drawdown\n      Saves the drawdown details\n    - POST /drawdown-response\n      Returns response of each and every loan status\n    - POST /drawdown-status\n      (Webhook - To be provided by Fintech)\n    - POST /repayment\n      (Webhook - To be provided by Fintech)\n    - POST /limit-details\n      (Webhook - To be provided by Fintech)\n    - POST /overdue-details\n      (Webhook - To be provided by Fintech)"}]}}
{"custom_id": "238.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : MarketPay Public\nDESCRIPTION :\n      MarketFinance MarketPay API [https://marketfinance.com/](https://marketfinance.com/)  <a name=\"introduction\"></a>\n      # Introduction Welcome to MarketPay API, the platform that allows our partners to offer a Buy Now Pay Later (BNPL)\n      payment scheme to their business customers.  >Access to the API is restricted to select partners and those with\n      access will have received the relevant credentials.  This documentation can be used by developers to understand\n      how to implement the BNPL scheme.  Want to learn more about MarketPay? You can either request a demo\n      [here](https://marketfinance.com/embeddedfinance) or contact us at <marketpay@marketfinance.com>.  <a [...]\nENDPOINTS :\n    - POST /orders/{marketPlaceOrderId}/transition\n      Transitions an order status\n    - POST /orders\n      Creates a new order\n    - GET /orders/{marketPlaceOrderId}\n      Gets order details\n    - PUT /orders/{marketPlaceOrderId}\n      Updates an existing order\n    - POST /buyers\n      Creates a new buyer\n    - GET /buyers/{companyRegistrationNumber}\n      Gets buyer company details\n    - PUT /buyers/{companyRegistrationNumber}/bank-account\n      Updates a buyers bank account details\n    - PUT /buyers/{companyRegistrationNumber}/contact-details\n      Updates a buyers contact details\n    - POST /suppliers\n      Creates a new supplier\n    - GET /suppliers/{companyRegistrationNumber}\n      Gets supplier company details\n    - PUT /suppliers/{companyRegistrationNumber}/bank-account\n      Updates a suppliers bank account details"}]}}
{"custom_id": "239.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : LOANEX API\nDESCRIPTION :\n      This API is for operations accessing LOANEX application. The authentication, authorization and token framework is\n      based on the OAuth 2.0 framework.  [More Info on OAuth 2.0, do visit https://oauth.net/2/]\nENDPOINTS :\n    - POST /applicant/new\n      Create an applicant profile\n    - PUT /applicant/{id}/profile\n      Update an applicant profile\n    - GET /applicant/{id}/account/summary\n      Obtain the applicant's account summary\n    - GET /applicant/{id}/account/detail\n      Obtain the applicant's account detailed information\n    - POST /loancase/new\n      Create new loan application"}]}}
{"custom_id": "24.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : TradeSim\nDESCRIPTION :\n      <div> <h4>Which endpoint does the API use?:</h4> <p>This API will use the endpoint\n      https://tradesim.de/api/{version}. The newest version is 1.0.0, so the endpoint is\n      https://tradesim.de/api/1.0.0/</p> <h4>How do I get an API key?:</h4> <p>You could get an API key at\n      tradesim.de</p> <h4>I can't find an accessToken</h4> <p>In following your API Key is the Bearer accessToken</p>\n      <p>This API uses SwaggerHub to create every Client SDK!</p> </div>\nENDPOINTS :\n    - POST /stock/{isin}\n      Get Stock Infos\n    - POST /liveCourse/{isin}\n      Live Course\n    - GET /stockList\n      Get Stocks\n    - GET /stockCourses\n      Get StocksCourses"}]}}
{"custom_id": "240.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : BankAssist Cards API Specification\nDESCRIPTION :\n      BankAssist Cards API Specification\nENDPOINTS :\n    - POST /cardActivation\n      cardActivation\n    - POST /updateCardOrder\n      updateCardOrder\n    - POST /orderCard\n      orderCard\n    - POST /ccFreeze\n      ccFreeze\n    - POST /ccUnfreeze\n      ccUnfreeze\n    - POST /debitFreeze\n      debitFreeze\n    - POST /debitUnfreeze\n      debitUnfreeze\n    - POST /debitcarddetails\n      debitcarddetails\n    - POST /resetPin\n      resetPin\n    - POST /sendOTP\n      sendOTP\n    - POST /verifyOTP\n      verifyOTP\n    - POST /GetSecurityQuestions\n      GetSecurityQuestions\n    - POST /AddBudget\n      AddBudget\n    - POST /GetBudgetAlerts\n      GetBudgetAlerts\n    - POST /travelDetails\n      to receive travel notifications"}]}}
{"custom_id": "242.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Lender & Spender Loan API\nDESCRIPTION :\n      API specs for loan intermediaries. An API key can be obtained from your dashboard:\n      (www.lenderspender.nl/dashboard)\nENDPOINTS :\n    - POST /calculator/cost\n      Get interest rates and calculate monthly installments\n    - POST /application/maex\n      Create new loan application from Maex import\n    - GET /application/{applicationId}\n      Find loan application by ID\n    - PUT /application/{applicationId}/cancel\n      Cancel a loan application with a given feedback reason and an optional comment\n    - PUT /application/{applicationId}/maex\n      Updates an existing loan application from a Maex import XML. Make sure the loan application can be changed by\n      verifying the can_be_changed attribute on the LoanApplication object.\n    - GET /application/{applicationId}/contract\n      Get loan application contract PDF\n    - POST /application/{applicationId}/ready-for-review\n      Submits an application for review by Lender & Spender. Only possible when application is complete.\n    - POST /application/{applicationId}/document\n      Add a file to a document\n    - GET /application/{applicationId}/document/{fileId}\n      Get the contents of the file\n    - DELETE /application/{applicationId}/document/{fileId}\n      Delete a file from a document\n    - PUT /application/{applicationId}/question/{questionId}\n      Provide an answer to a question [in beta]\n    - POST /application/{applicationId}/goods-or-services-delivered\n      Submit an invoice for payout after goods or services have been delivered"}]}}
{"custom_id": "243.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Lighter Capital Investor API\nDESCRIPTION :\n      API used by investment fund providers to obtain information about the structure (terms) of serviced loans, as well\n      as the status of current loans.\nENDPOINTS :\n    - GET /pipeline\n      lists all lending opportunities\n    - GET /loanstructure\n      lists all current and historical loans (structure)\n    - GET /loanstatus\n      lists all current and historical loans (status)\n    - GET /monthlyportfoliostatus\n      list of the status of all loans at the end of a given reporting period (calendar month).\n    - GET /payments\n      list all loan payments made in the given date window."}]}}
{"custom_id": "244.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : LoanStreet Loan Servicing API\nDESCRIPTION :\n      Loan Servicing API\nENDPOINTS :\n    - GET /loan/{loan_id}\n      Loan State Query\n    - POST /loan/{loan_id}/record_transaction\n      Record a Transaction for Loan"}]}}
{"custom_id": "247.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Converto-Matic!\nDESCRIPTION :\n      Converto-matic! allows you to get exchange-rates for many currencies. It also makes it easy for you to know the\n      value of your money in different currencies.\nENDPOINTS :\n    - GET /exchange\n      Get exchange-rates from currency\n    - GET /convert\n      Convert value from currency"}]}}
{"custom_id": "248.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Monitise Americas, Inc.\nDESCRIPTION :\n      Bank Document Management\nENDPOINTS :\n    - GET /{tenant}/document/types\n      Requests all the banking document types\n    - POST /{tenant}/{username}/document\n      Order a banking document"}]}}
{"custom_id": "249.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : REST API implementation of VIP bank API\nDESCRIPTION :\n      + This API provides information about user's own accounts. + All endpoints require user to be authorized. The user\n      proves his authorization by sending **Authorization**: Bearer {token} in a HTTP header. + This version **v3** of\n      the API supports tokens generated via **Moneta Internet Bank** only.\nENDPOINTS :\n    - GET /api/v3/vip/aisp/my/accounts\n      Client payment account list\n    - GET /api/v3/vip/aisp/my/accounts/{id}/balance\n      Account balance\n    - GET /api/v3/vip/aisp/my/accounts/{id}/transactions\n      Transaction history"}]}}
{"custom_id": "25.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : rePower\nDESCRIPTION :\n\nENDPOINTS :\n    - POST /repower/v2/repower\n      Mastercard rePower empowers consumers to instantly add money to eligible Mastercard cards. Money is available\n      immediately for expenditures anywhere Mastercard prepaid account is accepted. The ease with which cardholders can\n      convert cash to prepaid card funds turns their reloadable prepaid cards into valuable and practical [...]\n    - POST /repower/v2/repowerreversal\n      A Transfer Reversal is a request to reverse a previously submitted Mastercard rePower Transfer, and is only\n      available in extremely limited circumstances.  Reversal Processing : A rePower transaction reversal may be\n      submitted in the event of a documented clerical error. The rePower transaction reversal must be submitted [...]"}]}}
{"custom_id": "250.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Banka\nDESCRIPTION :\n      Banka is a light-weight core banking application that powers banking operations like account creation, customer\n      deposit and withdrawals. This app is meant to support a single bank, where users can signup and create bank\n      accounts online, but must visit the branch to withdraw or deposit money.\nENDPOINTS :\n    - GET /\n      Home\n    - GET /user\n      Gets the logged in user Details\n    - POST /auth/signup\n      Sign up a new user\n    - POST /auth/portal\n      create new Staff and Admin\n    - POST /auth/signin\n      Sign's in an existing user\n    - POST /resetpassword\n      Reset user password\n    - GET /accounts/{Accountnumber}\n      Gets a specific account\n    - DELETE /accounts/{Accountnumber}\n      deletes a specific account\n    - GET /user/{email}/accounts\n      Return all the accounts belonging to a user\n    - GET /user/accounts/owerid\n      Return all the accounts belonging to a user\n    - GET /accounts\n      Gets all accounts ?status or ?startDate&endDate\n    - POST /accounts\n      Creates a new user accounts\n    - PATCH /account/{Accountnumber}\n      Updates the account status\n    - GET /transactions/{id}\n      Gets a specific transaction\n    - GET /{Accountnumber}/transactions\n      Get all transactions for an account\n    - POST /transactions/{accountNumber}/credit\n      Credits a user account\n    - POST /transactions/{accountNumber}/debit\n      Debits a user account\n    - PUT /profileimage\n      Updates profile pictures"}]}}
{"custom_id": "251.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Account Information Service\nDESCRIPTION :\n      Open Banking Platform PSD2 API - Account Information  # Summary The **NextGenPSD2** *Framework Version 1.3.3*\n      offers a modern, open, harmonised and interoperable set of  Application Programming Interfaces (APIs) as the\n      safest and most efficient way to provide data securely.  The NextGenPSD2 Framework reduces XS2A complexity and\n      costs, addresses the problem of multiple competing standards  in Europe and, aligned with the goals of the Euro\n      Retail Payments Board, enables European banking customers to benefit from innovative products and services\n      ('Banking as a Service')  by granting TPPs safe and secure (authenticated and authorised) access to their [...]\nENDPOINTS :\n    - GET /v1/accounts\n      Read Account List\n    - GET /v1/accounts/{account-id}\n      Read Account Details\n    - GET /v1/accounts/{account-id}/balances\n      Read Balance\n    - GET /v1/accounts/{account-id}/transactions\n      Read transaction list of an account\n    - GET /v1/accounts/{account-id}/transactions/{transactionId}\n      Read Transaction Details"}]}}
{"custom_id": "252.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Client information API\nDESCRIPTION :\n\nENDPOINTS :\n    - POST /clients\n    - GET /clients/{sigmaLogin}\n    - PUT /clients/{sigmaLogin}\n    - DELETE /clients/{sigmaLogin}"}]}}
{"custom_id": "253.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : OpenBank API Project\nDESCRIPTION :\n      API that retrives transactions from OpenBank\nENDPOINTS :\n    - GET /v1/current-accounts/{accountId}/transactions\n      get all transactions from an account\n    - GET /v1/current-accounts/{accountId}/transactions/{transactionType}\n      get all transactions from a specific type\n    - GET /v1/current-accounts/{accountId}/transactions/{transactionType}/amount\n      get total amount of transactions from given type"}]}}
{"custom_id": "254.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : TPP-Bank\nDESCRIPTION :\n      TPP-Bank API specification\nENDPOINTS :\n    - GET /grant_access\n      Retrieve a code for getting an apiKey\n    - POST /token\n      Get access token with a code returned by grant_access\n    - POST /transaction_request\n      Initiate a transaction by setting it up at the bank.\n    - GET /approve_transaction\n      Approve transaction via bank.\n    - POST /ais\n      Retrieve a json response of account information."}]}}
{"custom_id": "255.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Account Balances Interface - BBL\nDESCRIPTION :\n      The API serves the objective of retrieving balances for a specified set of accounts from the BBL so as to\n      facilitate a data refresh in the Account Services API projection store.\nENDPOINTS :\n    - POST /retrieveBalances\n      This interface retrieves balances for a requested set of accounts to refresh projection store.\n    - POST /retrieveFunds\n      This interface retrieves static details of all Mutual Funds\n    - POST /notifyEodEnd\n      This interface provides notification message that EOD has ended so that post Aggreagation entries can be posted"}]}}
{"custom_id": "256.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Account Balances Interface - NAB\nDESCRIPTION :\n      The API serves the objective of retrieving balances for a specified set of accounts from the NAB CBS so as to\n      facilitate a data refresh in the Account Services API projection store.\nENDPOINTS :\n    - POST /retrieveBalances\n      This interface retrieves balances for a requested set of accounts to refresh projection store."}]}}
{"custom_id": "257.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Swagger Loan Application Scoring - OpenAPI 3.0\nDESCRIPTION :\n      Loan Application Scoring Demo\nENDPOINTS :\n    - PUT /application\n      \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0432 \u0437\u0430\u044f\u0432\u043a\u0435\n    - GET /application/{id}\n      \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u044f\u0432\u043a\u0435 \u043f\u043e \u0435\u0433\u043e ID\n    - DELETE /application/{id}\n      \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0437\u0430\u044f\u0432\u043a\u0443 \u043f\u0440\u0438 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u0441\u043a\u043e\u0440\u0438\u043d\u0433\u0435\n    - POST /scoring/{applicationId}\n      \u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0441\u043a\u043e\u0440\u0438\u043d\u0433"}]}}
{"custom_id": "258.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : andela-quick-credit\nDESCRIPTION :\n      Quick credit is an Api that allow you to manage a loan grant system. From this API users can create and login to\n      their accounts, request as well as manage their loan applications while admins can manage all type of loan\n      transactions, from accepting or rejecting them, to posting repayment transactions for different loans and also\n      manage all users in the system.  ## Authentication  This API uses OAuth v2 Bearer Token / Personal Access Token\n      for its authentication.\nENDPOINTS :\n    - POST /auth/signup\n      Sign up\n    - POST /auth/signin\n      Signin\n    - GET /loans\n      Get all loans application\n    - POST /loans\n      Post new loan application\n    - GET /loans/user/{userMail}\n      Get all users pending loans\n    - GET /loans/{loanID}/repayment\n      Get a loan repayment history\n    - POST /loans/{loanID}/repayment\n      Post a loan repayment\n    - GET /loans/{loanID}\n      Get a specific loan application\n    - PATCH /loans/{loanID}\n      Approve a loan application\n    - PATCH /users/{userMail}/verify\n      Verify a user"}]}}
{"custom_id": "259.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Choose Wisely Customer API\nDESCRIPTION :\n      <h2>The Choose Wisely Customer API</h2> <p>This API is used for integrating with the Choose Wisely loans\n      comparison service. There are multiple different use cases for this API.</p> <ul> <li>Submitting a customer to\n      Choose Wisely</li> <li>Submitting a customer to use with white labeled results</li> <li>Submitting a customer to\n      retrieve raw result data</li> </ul> <p><em>The more fields of the API you can populate, the more chance your\n      applicant will have of being submitted to all lenders in your panel and the better downstream conversion / results\n      you will acheive.</em></p> <h3>Endpoints</h3> <p>You will be provided with specific staging and production [...]\nENDPOINTS :\n    - POST /lead\n      Send loan application data\n    - POST /fetchresults\n      Send loan application data"}]}}
{"custom_id": "26.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Credit Transfer PromptPay API\nDESCRIPTION :\n      This is a Credit Transfer PromptPay\nENDPOINTS :\n    - POST /creditlookup\n      Credit Lookup\n    - POST /credittransfer\n      Credit Transfer"}]}}
{"custom_id": "260.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : DigitalAssetIntegrator: Crypto Accounts\nDESCRIPTION :\n      This API allows clients to create and manage crypto accounts for their customers at various crypto partners.\n      **client**:  The client (bank or broker) that calls into this API  **partner**:  The crypto-partner that the\n      client bank would like to open accounts with  **identity**: A customer of the client bank (person or institution)\n      with an associated tax id#  **account**:  A crypto account for a customer that can hold multiple digital assets\n      **profile**:  A profile is a sub-account of a crypto account that provides the account holder the ability to\n      further organize digital assets within a single crypto account. A crypto account can have multiple profiles [...]\nENDPOINTS :\n    - GET /partners/{partnerId}/identities\n      List customer identities\n    - POST /partners/{partnerId}/identities/person\n      Create customer identity for a person\n    - POST /partners/{partnerId}/identities/institution\n      Create customer identity for an institution\n    - GET /partners/{partnerId}/identities/{id}\n      Get customer identity by id\n    - PUT /partners/{partnerId}/identities/{id}\n      Updated customer identity\n    - GET /partners/{partnerId}/accounts\n      Get customer accounts\n    - POST /partners/{partnerId}/accounts\n      Create customer account\n    - GET /partners/{partnerId}/accounts/{id}\n      Get customer account by id\n    - PUT /partners/{partnerId}/accounts/{id}\n      Updated customer account\n    - DELETE /partners/{partnerId}/accounts/{id}\n      Delete customer account\n    - GET /partners/{partnerId}/profiles\n      Get account profiles\n    - POST /partners/{partnerId}/profiles\n      Create account profile\n    - GET /partners/{partnerId}/profiles/{id}\n      Get account profile by id"}]}}
{"custom_id": "261.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Consumers\nDESCRIPTION :\n      A consumer has a D2C (Direct-to-consumer) relationship with the organization. The consumer typically interacts\n      with eCommerce platforms. The consumer API enables you to create new accounts for a consumer, and update and/or\n      retrieve details of an existing account. The API provides details such as a consumer\u2019s personal and contact\n      details, their address and shipping information, their loyalty details etc.\nENDPOINTS :\n    - GET /accounts\n      Returns an Account\n    - POST /accounts\n      Create a new Consumer (Account)\n    - PATCH /accounts\n      Update an existing Account\n    - GET /accounts/{Id}\n      Returns an Account\n    - PATCH /accounts/{Id}\n      Update an existing Account"}]}}
{"custom_id": "262.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Forex API\nDESCRIPTION :\n      Set of APIs to store and display foreign exchange rate for currencies on a daily basis\nENDPOINTS :\n    - GET /currency_pairs\n      get all currency pairs\n    - POST /currency_pairs\n      add a currency pair\n    - DELETE /currency_pairs/{id}\n      delete a currency pair\n    - POST /exchange_rates\n      add an exchange rate\n    - GET /exchange_rates/trend\n      get exchange rates trend\n    - GET /exchange_rates/track\n      track exchange rates"}]}}
{"custom_id": "264.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : kgs-api_savings_plan\nDESCRIPTION :\n      Processing securities savings plans and amount orders\nENDPOINTS :\n    - POST /vlsavingsplanscosts\n      Calculates ex ante costs for a VL savings plan\n    - PATCH /vlsavingsplanscosts/{securitiesAccountNumber}/{savingsPlanId}\n      Calculates ex ante costs for changes of a VL savings plan\n    - POST /vlsavingsplans\n      Creates a VL savings plan\n    - PATCH /vlsavingsplans/{securitiesAccountNumber}/{savingsPlanId}\n      Changes a VL savings plan"}]}}
{"custom_id": "265.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Transaction Savings\nDESCRIPTION :\n      Transaction Savings APIs/Events\nENDPOINTS :\n    - POST /enterprise/transactionSavings/agreement\n      create Agreement\n    - PUT /enterprise/transactionSavings/agreement/{agreementReference}\n      Update Agreement\n    - GET /enterprise/transactionSavings/agreement/{agreementReference}\n      Get Details of greement\n    - GET /enterprise/transactionSavings/agreement/{customerReference}\n      Get list of agreement references for a customer\n    - GET /enterprise/transactionSavings/agreement/createEvent\n      Event response when an agreement is create\n    - GET /enterprise/transactionSavings/agreement/amendEvent\n      Event response when an agreement is amended\n    - POST /enterprise/transactionSavings/capture/transaction\n      Capture Transaction\n    - GET /enterprise/transactionSavings/capture/savingsEvent\n      Event response for posting Savings in core system\n    - GET /enterprise/transactionSavings/reporting/savings/{agreementReference}\n      To get the list of savings for transactions performed on this account\n    - GET /enterprise/transactionSavings/reporting/savings/{agreementReference}/pending\n      To get the list of savings for transactions performed on this account that have not been booked"}]}}
{"custom_id": "266.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Client Revenue Internet Banking\nDESCRIPTION :\n      * Service description: Service responsible for updating billing information for corporate clients. Once updated,\n      it will be used in the credit analysis processes by the compliance area. ----- * Interface description: Service\n      responsible for updating customer billing information in the corporate segment. Being updated, it is used in the\n      credit analysis processes by the compliance area.\nENDPOINTS :\n    - GET /billings:by_token\n      Service responsible for query segmentation, retecency date e yearly billing last.\n    - POST /billings/{billing_id}:evaluate\n      Consultative billings evaluate\n    - PUT /billings/{billing_id}\n      Effective billing\n    - GET /billings_monthly\n      Service responsible for query billings monthly.\n    - PUT /billings_monthly/{billing_monthly_id}\n      Effective billing monthly\n    - POST /billings_monthly:batch_evaluate\n      Consultative billings monthly evaluate\n    - GET /segments/{segments_id}\n      Service responsible for bringing company service."}]}}
{"custom_id": "267.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : ItalicFinance Client API\nDESCRIPTION :\n      ItalicFinance REST API openApi 3.0 specification\nENDPOINTS :\n    - GET /user\n      Get user\n    - POST /user\n      Initiate user\n    - POST /user/refreshLink\n      Refresh user link\n    - GET /user/balance\n      Get user balance\n    - POST /user/createLoginLink\n      Create user login link\n    - PUT /user/verified\n      Update user verified status\n    - GET /invoice\n      Get my invoices\n    - POST /invoice\n      Create invoice\n    - GET /invoice/{invoiceId}\n      Get invoice by id\n    - PUT /invoice/{invoiceId}/status\n      Update invoice status\n    - POST /intent\n      Update intent status"}]}}
{"custom_id": "268.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Bank Product Microservice\nDESCRIPTION :\n      Bank Product Microservice\nENDPOINTS :\n    - GET /bank-product\n    - PUT /bank-product\n    - POST /bank-product\n    - GET /collection-strategy\n      List all the collection strategy\n    - POST /collection-strategy\n      Create a Collection Strategy\n    - GET /collection-strategy/{collectionStrategyId}\n      Get detailed single Collection Strategy\n    - PUT /collection-strategy/{collectionStrategyId}\n      Update Collection Strategy\n    - POST /collection-strategy/{collectionStrategyId}/strategyAction\n      Add StrategyAction to Collection Strategy\n    - PUT /collection-strategy/{collectionStrategyId}/strategyAction/{strategyActionId}\n      Update strategy action existing on collection strategy\n    - DELETE /collection-strategy/{collectionStrategyId}/strategyAction/{strategyActionId}\n      Delete a strategy action\n    - GET /collection-strategy/data/stages\n      To get all the stages.\n    - GET /collection-strategy/data/actions\n      To get all the actions\n    - GET /collection-strategy/data/operands\n      To get all the operands\n    - GET /collection-strategy/data/template-token\n      To get all and search template tokens"}]}}
{"custom_id": "269.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Vx Loan Monthly Installment API Service\nDESCRIPTION :\n      This service provides an list of possible loan durations with the minimum monthly rate for the loan\nENDPOINTS :\n    - GET /applications/loan/service/installment/monthly/{amount}/{purpose}\n      fetch a list of monthly rates"}]}}
{"custom_id": "27.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : FundsforYou\nDESCRIPTION :\n      This is a FundsforYou and Related funds API\nENDPOINTS :\n    - GET /funds/recommended\n      get recommended funds for you\n    - GET /funds/relatedfunds\n      get related funds"}]}}
{"custom_id": "271.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : mortgage-applications\nDESCRIPTION :\n      This is the MORTGAGE APPLICATIONS System API (a.k.a: mortgage-applications) defined as a technical API for storing\n      mortage application, getting mortgage application info, etc. _Note_: All information has been extracted from\n      current information and should be reviewed once the requirements are completed.\nENDPOINTS :\n    - GET /mortgage-applications\n      get the info of mortgage applications\n    - GET /mortgage-applications/{mortAppId}\n      get the info of a given mortgage application\n    - GET /mortgage-applications/{mortAppId}/documents\n      Get all documents\n    - POST /mortgage-applications/{mortAppId}/documents\n      Upload file"}]}}
{"custom_id": "272.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Simple bank API\nDESCRIPTION :\n      This is a bank API\nENDPOINTS :\n    - GET /Transactions\n      get transactions\n    - POST /Transactions\n      transfer money\n    - POST /Transactions/deposit\n      deposit money\n    - POST /Transactions/withdraw\n      withdraw money\n    - PATCH /Accounts/{IBAN}\n      update account\n    - GET /{Username}/Accounts\n      Gets the accounts of the user.\n    - POST /{Username}/Accounts\n      Create an account.\n    - GET /Users\n      return users\n    - POST /Users\n      create user\n    - GET /Login\n      log in using given credentials"}]}}
{"custom_id": "273.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : acme-bank\nDESCRIPTION :\n\nENDPOINTS :\n    - GET /customers\n      get list of customers\n    - POST /customers\n      creates a customer\n    - GET /customers/{customer_id}\n      get customer by  customer ID\n    - DELETE /customers/{customer_id}\n      deletes customer by customer ID\n    - PATCH /customers/{customer_id}\n      updates a customer based on customer ID\n    - GET /customers/{customer_id}/accounts\n    - GET /accounts\n      get list of accounts\n    - POST /accounts\n      creates a account\n    - GET /accounts/{accounts_id}\n      get account by  account ID\n    - PUT /accounts/{accounts_id}\n      replaces an existing account by account ID\n    - DELETE /accounts/{accounts_id}\n      deletes account by account ID\n    - GET /accounts/{accounts_id}/transactions\n    - GET /transactions\n      get list of transactions\n    - POST /transactions\n      creates a transaction\n    - GET /transactions/{transactions_id}\n      get transaction by  transaction ID"}]}}
{"custom_id": "274.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Consumer Credit Report\nDESCRIPTION :\n      # Introduction       Equifax\u2019s Consumer Credit Report is the leading consumer credit resource enabling lenders to\n      make faster, more informed credit-granting decisions, better manage their risk and maximize growth opportunities.\n      The Consumer Credit Report unites the power of superior consumer dfata with best-in-class search and match logic\n      capabilities to deliver higher match rates on more inquiries.    # Getting Started  1. **<a\n      href=\"/user/applications\" target=\"_blank\">Create</a>** an application  2. **<a href=\"/user/applications\"\n      target=\"_blank\">Subscribe</a>** to Consumer Credit Report API  3. **<a href=\"/products/consumer-credit- [...]\nENDPOINTS :\n    - POST /reports/credit-report\n    - GET /reports/credit-report/{pdf-request-id}\n      retrieve PDF referenced in 'links' from a previous POST response"}]}}
{"custom_id": "275.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : TransferWise Business Payouts API V2\nDESCRIPTION :\n      Easier and hopefully better design for TransferWise Business Payouts API\nENDPOINTS :\n    - GET /borderless-accounts\n      Get list of borderless accounts\n    - GET /borderless-accounts/{borderlessAccountId}/balances\n      Borderless account available balances by currencies\n    - POST /borderless-accounts/{borderlessAccountId}/payouts\n      Send payment orders, domestic and cross-border\n    - GET /borderless-accounts/{borderlessAccountId}/payouts\n      Get payout list, for example pending payouts, failed payouts or completed payouts\n    - GET /borderless-accounts/{borderlessAccountId}/payouts/{transactionId}\n      Get payout transaction details\n    - POST /borderless-accounts/{borderlessAccountId}/conversions\n      Convert funds between currencies\n    - GET /borderless-accounts/{borderlessAccountId}/conversions/{transactionId}\n      Get conversion transaction details\n    - GET /borderless-accounts/{borderlessAccountId}/statements\n      Get borderless account statement\n    - GET /notifications/topics\n      Get list of push notifications topics: payoutStatusChange and depositReceived\n    - POST /notifications/subscriptions\n      Subscribe or unsubscribe URL to notification topic\n    - GET /notifications/messages\n      Get list of messages, last 30 days are available\n    - GET /notifications/messages/{messageId}\n      Get message details\n    - GET /notifications/messages/{messageId}/resend\n      Trigger re-sending message to subscribed URL"}]}}
{"custom_id": "276.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : TrueBlocks API\nDESCRIPTION :\n      An API for accessing cached Ethereum blockchain data and accounts\nENDPOINTS :\n    - GET /export\n      Export full detail of transactions for one or more Ethereum addresses.\n    - GET /list\n      Add or remove monitors for a given Ethereum address (or collection of addresses).\n    - GET /tags\n    - GET /names\n      Query addresses and/or names of well known accounts.\n    - GET /collections\n    - GET /abis\n      Fetches the ABI for a smart contract.\n    - GET /rm\n    - GET /status\n      Report on status of one or more TrueBlocks caches.\n    - GET /scrape\n      Decentralized blockchain scraper and block cache.\n    - GET /blocks\n      Returns block(s) from local cache or directly from a running node.\n    - GET /transactions\n      Retrieve a transaction from the cache or the node.\n    - GET /receipts\n      Retrieve a transaction's receipt from the cache or the node.\n    - GET /logs\n      Retrieve a transaction's logs from the cache or the node.\n    - GET /traces\n      Retrieve a transaction's traces from the cache or the node.\n    - GET /when\n      Finds block based on date, blockNum, timestamp, or 'special'.\n    - GET /state\n      Retrieve the balance of one or more address at the given block(s).\n    - GET /tokens\n      Retrieve token balances for one or more address at given block(s).\n    - GET /quotes\n      Freshen and/or display Ethereum price data.\n    - GET /slurp\n      Fetches data from EtherScan for an arbitrary address.\n    - GET /where\n      Reports in which cache (if any) a block is found.\n    - GET /dive\n      Dive deeply into the turboGeth database."}]}}
{"custom_id": "277.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Finnova Banking API\nDESCRIPTION :\n      # Introduction This document describes the standard API provided by the Swisscom Integration Layer to the finnova\n      corebanking system.  # Formatting  Field         | Format        | java regular expression | Example -------------\n      | ------------- | -------------      | ------------- Currencies    | ISO 4217 (three letter code) |     | CHF\n      Countries     | ISO 3166-2    |                    | CH Date          | ISO 8601: YYYY-MM-DD | ^yyyy-mm-dd$\n      | 2018-12-31 Datetime      | ISO 8601: YYYY-MM-DDThh:mm:ss.sTZD | ^yyyy-mm-ddThh:MM:ss.sTZD$ |\n      2016-06-02T14:54:58+02:00 Language      | ISO 639-1:2002 | ^[a-z]{2}(_[A-Z]{2})$ | de ISIN          | ISO [...]\nENDPOINTS :\n    - GET /banks/{bankNumber}/clients/{clientId}\n      getClient\n    - GET /banks/{bankNumber}/clients/getClientByDisplayId\n      getClientByDisplayId\n    - GET /banks/{bankNumber}/clients/{clientId}/addresses\n      listClientAddresses\n    - GET /banks/{bankNumber}/clients/search\n      listClientSearch\n    - GET /banks/{bankNumber}/advisors/{advisorId}\n      getAdvisor\n    - GET /banks/{bankNumber}/advisors/getByUserId\n      getAdvisorByUserId\n    - GET /banks/{bankNumber}/accounts\n      listAccounts\n    - GET /banks/{bankNumber}/cashAccounts/{cashAccountId}\n      getCashAccount\n    - GET /banks/{bankNumber}/cashAccounts/getByIban\n      getCashAccountByIban\n    - GET /banks/{bankNumber}/cashAccounts/{cashAccountId}/balance\n      getCashAccountBalance\n    - GET /banks/{bankNumber}/clients/{clientId}/customizedData\n      listClientCustomizedData\n    - GET /banks/{bankNumber}/clients/{clientId}/customizedData/{customizedDataId}\n      getClientCustomizedData\n    - PUT /banks/{bankNumber}/clients/{clientId}/customizedData/{customizedDataId}\n      putClientCustomizedData\n    - GET /banks/{bankNumber}/portfolios/{portfolioId}\n      getPortfolio\n    - GET /banks/{bankNumber}/assets/securities/search\n      listSecuritySearch\n    - GET /banks/{bankNumber}/assets/securities/{securityId}\n      getSecurity\n    - GET /banks/{bankNumber}/assets/securities/getByIsin\n      getSecurityByIsin\n    - GET /banks/{bankNumber}/fx-rates/latest\n      getForexRates"}]}}
{"custom_id": "278.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : PNC investment accounts\nDESCRIPTION :\n      This InvestmentAccount MicroService exposes Various endpoint which deals with Investment Accounts. <br>following\n      users are available to test responses. <br><b>sanath(2)</b> and <b>abdevilliers(6)</b> <br> click on\n      <b>Authorize</b> and  enter one of the above user-id. This application running with following profiles active.\n      <b>[cold-box, work-stage]</b> .\nENDPOINTS :\n    - GET /investment-accounts\n      getAllInvestmentAccountBasicInformation\n    - GET /investment-accounts/{account-number}\n      getInvestAccountInfoByAccountNumber\n    - GET /investment-accounts/{account-number}/statements\n      getInvestmentAccountStatements\n    - GET /investment-accounts/{account-number}/statements/{statement-id}\n      getInvestmentAccountStatement\n    - GET /investment-accounts/{account-number}/transactions\n      getInvestmentAccountTransactions\n    - GET /investment-accounts/{account-number}/transactions/images/{image-id}\n      getInvestmentAccountTransactionImages"}]}}
{"custom_id": "279.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Account-Balance\nDESCRIPTION :\n      This API is used to deliver account balance reports for Treasury Management customers.\nENDPOINTS :\n    - POST /balances/report\n      Request a report of balances as of a given date for a selected set of accounts and balance types."}]}}
{"custom_id": "280.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Cyber.Search Ethereum API\nDESCRIPTION :\n      Access to Ethereum/Ethereum Classic chain entites. <br /> To choose needed chain we use <code>{chainName}</code>\n      parameter with <code>ethereum</code> or <code>ethereum_classic</code> value in url path.\nENDPOINTS :\n    - GET /{chainName}/block/{blockNumber}\n      Find ethereum block by number\n    - GET /{chainName}/block/{blockNumber}/transactions\n      Download block transactions\n    - GET /{chainName}/address/{id}\n      Find ethereum address info by address id\n    - GET /{chainName}/address/{id}/transactions\n      Download address transactions\n    - GET /{chainName}/tx/{hash}\n      Find ethereum transaction by its hash"}]}}
{"custom_id": "281.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Axos Invest API\nDESCRIPTION :\n\nENDPOINTS :\n    - POST /api/v3/users/updated\n      Trigger User has been Externally Updated\n    - GET /api/v3/users/bank_accounts\n      Get bank accounts\n    - GET /api/v3/users/milestones\n      Get general milestone information for a client\n    - GET /api/v3/users/notifications\n      Get notifications for client\n    - GET /api/v3/users/subscriptions\n      Get a client's subscriptions\n    - GET /api/v3/users/formulas\n      Get a client's forumlas"}]}}
{"custom_id": "282.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Loan API\nDESCRIPTION :\n      # Introduction Loan Api is an api that manages the loan customers, the loans collected and payments  # Overview\n      Things that the developers should know about\nENDPOINTS :\n    - POST /customer/new_customer.php\n      https://apply.cashdrive.co/api/customer/new_customer.php\n    - GET /customer/customer.php\n      https://apply.cashdrive.co/api/customer/customer.php\n    - DELETE /customer/delete_customer.php\n      https://apply.cashdrive.co/api/customer/delete_customer.php\n    - DELETE /loan/delete_loan.php\n      https://apply.cashdrive.co/api/loan/delete_loan.php\n    - GET /loan/due_loan.php\n      https://apply.cashdrive.co/api/loan/due_loan.php\n    - GET /loan/list_loan.php\n      https://apply.cashdrive.co/api/loan/list_loan.php\n    - GET /loan/pastloan_mdate.php\n      https://apply.cashdrive.co/api/loan/pastloan_mdate.php\n    - GET /loan/principal_outstanding_loan.php\n      https://apply.cashdrive.co/api/loan/principal_outstanding_loan.php\n    - POST /loan/new_loan.php\n      https://apply.cashdrive.co/api/loan/new_indiv_loan.php\n    - GET /manual_payments/list_pay.php\n      https://apply.cashdrive.co/api/manual_payments/list_pay.php\n    - POST /loan/new_pay.php\n      https://apply.cashdrive.co/api/loan/new_pay.php\n    - GET /missed_payments/missed_pay.php\n      https://apply.cashdrive.co/api/missed_payments/missed_pay.php"}]}}
{"custom_id": "283.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : BrokersList\nDESCRIPTION :\n      Common BrokersList API\nENDPOINTS :\n    - GET /brokers/\n      Get a list of brokers."}]}}
{"custom_id": "285.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : NexusBankAccountPaymentMethodsCreate\nDESCRIPTION :\n      Common Bank Account Payment Methods Create API\nENDPOINTS :\n    - POST /bank-account-payment-methods/\n      Create a new bank account payment method"}]}}
{"custom_id": "286.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Ruby API\nDESCRIPTION :\n      Dynamically deploy NFT product or collection contracts, mint from deployed contracts, and manage all deployed\n      contracts and its associated assets on the Ethereum Blockchain.\nENDPOINTS :\n    - PUT /api/v0/contracts\n      Update a contract for NFT products\n    - POST /api/v0/contracts\n      Deploy a contract for NFT products\n    - PUT /api/v0/contracts/collections\n      Update a deployed collection contract\n    - POST /api/v0/contracts/collections\n      Deploy an NFT collection contract\n    - POST /api/v0/contracts/mints\n      Mint from a product contract\n    - POST /api/v0/contracts/collections/mints\n      Batch Mint from a collection contract\n    - POST /api/v0/mints/transfers\n      Transfer a minted NFT\n    - POST /api/v0/ipfs/metadata\n      Upload metadata to IPFS\n    - POST /api/v0/ipfs/collection\n      Upload metadata directory to IPFS"}]}}
{"custom_id": "29.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : 1Forge Finance APIs\nDESCRIPTION :\n      Stock and Forex Data and Realtime Quotes\nENDPOINTS :\n    - GET /quotes\n      Get quotes for all symbols\n    - GET /symbols\n      Get a list of symbols for which we provide real-time quotes"}]}}
{"custom_id": "30.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : User Profile\nDESCRIPTION :\n      This API allows to retrieve the profile information of a user within the operator. # Relevant Definitions and\n      concepts The user profile considers the following main concepts: * **Id**: Unique identifier of the user. This\n      uniquely identifies the person the profile belongs to.  * **Name** and other legal or contact information for the\n      user.  * **Identifiers**: each identifier uniquely points to an OB asset that is related to this user and provides\n      access to a list of services within the OB services portfolio. For example, a phone number identifies a telco\n      asset that may give access to mobile post-pay services. Other examples are a subscription ID that gives [...]\nENDPOINTS :\n    - GET /users\n      Return user profile information based on query\n    - GET /users/{user_id}\n      Return user profile information of a specific user."}]}}
{"custom_id": "31.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Adyen BinLookup API\nDESCRIPTION :\n      The BIN Lookup API provides endpoints for retrieving information, such as cost estimates, and 3D Secure supported\n      version based on a given BIN.  ## Authentication You need an [API credential](https://docs.adyen.com/development-\n      resources/api-credentials) to authenticate to the API.  If using an API key, add an `X-API-Key` header with the\n      API key as the value, for example:   ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\\n      ... ```  Alternatively, you can use the username and password to connect to the API using basic authentication,\n      for example:  ``` curl -U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\ -H [...]\nENDPOINTS :\n    - POST /get3dsAvailability\n      Check if 3D Secure is available\n    - POST /getCostEstimate\n      Get a fees cost estimate"}]}}
{"custom_id": "33.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Fireblocks Exchange API\nDESCRIPTION :\n      This is the [Fireblocks](https://fireblocks.com) Exchange API standard. Check out the [API\n      documentation](https://docs.fireblocks.com) for more information.  <h1>Authentication Fundamentals</h1>  The API-\n      KEY and SECRET are generated and provided by the exchange.  <h2>Creating a Request</h2>  All REST requests will\n      contain the following headers:  <p>*X-FBAPI-KEY* The API key as a string.</p> <p>*X-FBAPI-SIGNATURE* The encoded\n      signature (see Signing a Message).</p> <p>*X-FBAPI-TIMESTAMP* A timestamp of the request (in milliseconds).</p>\n      <p>*X-FBAPI-NONCE* An increasing number on the request.</p>  <h2>Signing a Message</h2>  <p><i>For the [...]\nENDPOINTS :\n    - GET /v1/accounts\n      Fetches list of all account types, and the balances within them.\n    - GET /v1/depositAddress\n      Fetch the deposit wallet address for a coinSymbol and network\n    - POST /v1/depositAddress\n      Create a new deposit wallet address for a given coinSymbol and network\n    - GET /v1/withdrawalFee\n      Fetch the estimated transaction fee required for an external withdrawal\n    - POST /v1/withdraw\n      Initiate a withdrawal from Exchange wallet to external wallet address\n    - GET /v1/transactionByID\n      Fetch the status of a given transaction ID\n    - GET /v1/transactionByHash\n      Fetch the status of a given <txHash, network> pair\n    - GET /v1/transactionHistory\n      Fetch the history of all transactions\n    - GET /v1/supportedAssets\n      Fetch the assets supported by the exchanges\n    - POST /v1/subMainTransfer\n      Initiate a transfer between an internal sub-account and the main-account\n    - POST /v1/subaccountsTransfer\n      Initiate a transfer between an two sub-accounts\n    - POST /v1/internalTransfer\n      Initiate a transfer from one internal account to another, eg. TRADING to MARGIN"}]}}
{"custom_id": "34.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Currencies API\nDESCRIPTION :\n      Get information about currencies\nENDPOINTS :\n    - POST /rms-web/services/rest/currencies/getRateByPeriod\n      Auto generated using Swagger Inspector\n    - GET /rms-web/services/rest/currencies/getAllCurrencies\n      Auto generated using Swagger Inspector\n    - POST /rms-web/services/rest/currencies/getCurrentRate\n      Auto generated using Swagger Inspector\n    - POST /rms-web/services/rest/currencies/getRateByDate\n      Auto generated using Swagger Inspector"}]}}
{"custom_id": "35.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Xero Bank Feeds API\nDESCRIPTION :\n      The Bank Feeds API is a closed API that is only available to financial institutions that have an established\n      financial services partnership with Xero. If you're an existing financial services partner that wants access,\n      contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your\n      business customers, contact us to become a financial services partner.\nENDPOINTS :\n    - GET /FeedConnections\n      Searches for feed connections\n    - POST /FeedConnections\n      Create one or more new feed connection\n    - POST /FeedConnections/DeleteRequests\n      Delete an existing feed connection\n    - GET /FeedConnections/{id}\n      Retrieve single feed connection based on a unique id provided\n    - GET /Statements\n      Retrieve all statements\n    - POST /Statements\n      Creates one or more new statements\n    - GET /Statements/{statementID}\n      Retrieve single statement based on unique id provided"}]}}
{"custom_id": "36.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Confirmation of Funds API Specification\nDESCRIPTION :\n      Swagger for Confirmation of Funds API Specification\nENDPOINTS :\n    - POST /funds-confirmation-consents\n      Create Funds Confirmation Consent\n    - DELETE /funds-confirmation-consents/{ConsentId}\n      Delete Funds Confirmation Consent\n    - GET /funds-confirmation-consents/{ConsentId}\n      Get Funds Confirmation Consent\n    - POST /funds-confirmations\n      Create Funds Confirmation"}]}}
{"custom_id": "37.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Foreign Exchange Rate APIs\nDESCRIPTION :\n      ## API End-points URL Design ## Following are the developed/designed APIs end-points, that can meet user-stories\n      acceptance criteria.  1. As a consumer I want to get a list of all available currencies.\n      http://localhost:8080/com.fundsaccess.services.assessment.blueprint/service/exchange/currencies  2. As a consumer\n      I want to get all EUR-FX exchange rates at all available dates as a collection.\n      http://localhost:8080/com.fundsaccess.services.assessment.blueprint/service/exchange/rates/  3. As a consumer I\n      want to get the EUR-FX exchange rate at particular day (date parameter should follow yyyy-MM-dd format for [...]\nENDPOINTS :\n    - GET /com.fundsaccess.services.assessment.blueprint/service/exchange/currencies\n      This rest end-point returns all available foreign currencies.\n    - GET /com.fundsaccess.services.assessment.blueprint/service/exchange/rates\n      This rest end-point returns foreign exchange rates of all possible currencies for all available dates.\n    - GET /com.fundsaccess.services.assessment.blueprint/service/exchange/amounts/2020-05-26\n      This rest end-point returns foreign exchange rates for particular day, date in request should follow the format as\n      yyyy-MM-dd i.e. 2020-03-19.\n    - GET /com.fundsaccess.services.assessment.blueprint/service/exchange/rates/2020-05-26\n      This rest end-point returns foreign exchange amount for particular day, date in request should follow the format\n      as yyyy-MM-dd i.e. 2020-03-19."}]}}
{"custom_id": "38.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Banking API\nDESCRIPTION :\n      This is a testing version of API used for banking services\nENDPOINTS :\n    - POST /customer/login\n    - POST /customer/register\n    - GET /customer\n    - GET /accounts\n    - GET /accounts/new\n    - POST /transfer/send"}]}}
{"custom_id": "4.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Qualpay Payment Gateway API\nDESCRIPTION :\n      This document describes the Qualpay Payment Gateway API.\nENDPOINTS :\n    - POST /ardef\n      Get Card type Information for Visa, Mastercard, and Discover\n    - POST /auth\n      Authorize Transaction\n    - POST /batchClose\n      Close Batch\n    - POST /capture/{pgIdOrig}\n      Capture an Authorized Transaction\n    - POST /credit\n      Issue Credit to Cardholder\n    - POST /emailReceipt/{pgId}\n      Send Transaction Receipt Email\n    - POST /expireToken\n      Expire Token\n    - POST /force\n      Force Transaction Approval\n    - POST /recharge/{pgIdOrig}\n      Recharge Previously Settled Transaction\n    - POST /refund/{pgIdOrig}\n      Refund Previously Captured Transaction\n    - POST /sale\n      Sale (Auth + Capture)\n    - POST /tokenize\n      Tokenize Card\n    - POST /verify\n      Verify Card\n    - POST /void/{pgIdOrig}\n      Void a Previously Authorized Transaction"}]}}
{"custom_id": "40.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : SCIM\nDESCRIPTION :\n      The SCIM API lets you manage users in your organization. You can then automate the provisioning of product\n      licenses for these users, and they can use your company's Single Sign-On solution through an Identity Provider.\nENDPOINTS :\n    - GET /Groups\n      Get Groups\n    - POST /Groups\n      Create Group\n    - DELETE /Groups/{groupKey}\n      Delete Group\n    - GET /Groups/{groupKey}\n      Get Group\n    - PATCH /Groups/{groupKey}\n      Update Group\n    - PUT /Groups/{groupKey}\n      Replace Group\n    - GET /Schemas/Users\n      Get User Schema\n    - GET /ServiceProviderConfigs\n      Get Service Provider Configurations\n    - GET /Users\n      Get Users\n    - POST /Users\n      Create User\n    - GET /Users/me\n      Get Current User\n    - PATCH /Users/me\n      Update Current User\n    - PUT /Users/me\n      Replace Current User\n    - DELETE /Users/{userKey}\n      Delete User\n    - GET /Users/{userKey}\n      Get User\n    - PATCH /Users/{userKey}\n      Update User\n    - PUT /Users/{userKey}\n      Replace User"}]}}
{"custom_id": "42.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Client API\nDESCRIPTION :\n      This is Client API - REST API using OpenApi Specification. Using this API you can create  new client, to get\n      inform. about client, to update client, to delete client\nENDPOINTS :\n    - GET /clients\n      List of clients\n    - POST /clients\n      Add new client\n    - GET /clients/{login}\n      Search client by login\n    - PUT /clients/{login}\n      Update client\n    - DELETE /clients/{login}\n      Delete client\n    - GET /orders\n      List of orders\n    - POST /orders\n      Add new order\n    - GET /orders/{id}\n      Search order by id\n    - PUT /orders/{id}\n      Update order\n    - PUT /orders/{id}/canceled\n      Cancel order\n    - PATCH /orders/{id}/canceled\n      Cancel order partially"}]}}
{"custom_id": "43.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Bill Payment Validator\nDESCRIPTION :\n      The Bill Payment Validator service allows RPPS origination (payment sender) customers to identify if a potential\n      RPPS transaction would process successfully before transmitting the formal payment transaction, reducing RPPS\n      payment rejects and costly payment processing exceptions.\nENDPOINTS :\n    - POST /isRoutingValid\n      Bill Payment Validator service returns the processing status for a potential RPPS transaction"}]}}
{"custom_id": "45.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Subaccounts API\nDESCRIPTION :\n      The Subaccounts API enables you to create subaccounts under your primary account. Subaccounts facilitate\n      differential product configuration, reporting, and billing. The Subaccounts API is released initially with\n      restricted availability. You can read more about the API in the [Subaccounts\n      documentation](/account/subaccounts/overview).\nENDPOINTS :\n    - GET /{api_key}/balance-transfers\n      Retrieve list of balance transfers\n    - POST /{api_key}/balance-transfers\n      Transfer balance\n    - GET /{api_key}/credit-transfers\n      Retrieve list of credit transfers\n    - POST /{api_key}/credit-transfers\n      Transfer credit\n    - GET /{api_key}/subaccounts\n      Retrieve list of subaccounts\n    - POST /{api_key}/subaccounts\n      Create subaccount\n    - GET /{api_key}/subaccounts/{subaccount_key}\n      Retrieve a subaccount\n    - PATCH /{api_key}/subaccounts/{subaccount_key}\n      Modify a subaccount\n    - POST /{api_key}/transfer-number\n      Transfer number"}]}}
{"custom_id": "46.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Tradeworks\nDESCRIPTION :\n      Authentication is required to access all methods of the API. Enter username and password.\n      Credentials are automatically set as you type.\nENDPOINTS :\n    - GET /strategies/strategyId/{strategyId}\n      Get Strategy by ID\n    - GET /strategies/templates\n      Get all Template Strategies\n    - POST /tradingAccounts\n      Add a Trading Account\n    - PUT /tradingAccounts/password/{username}/{brokerserver}/{mt4username}\n      Update MT4 Account Password\n    - POST /users\n      Create a new Tradeworks User\n    - GET /users/email/{email}\n      Check if email is available\n    - PUT /users/password/{username}\n      Update user's password\n    - GET /users/username/{username}\n      Check if username is available"}]}}
{"custom_id": "47.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : NFT Engine API\nDESCRIPTION :\n      NFT Engine API\nENDPOINTS :\n    - POST /assets/createAsset\n      Create Digital Asset\n    - POST /assets/storeMetadataToDAM\n    - POST /assets/storeTnxStatusToDAM\n    - POST /s3/uploadFileToS3\n      upload a Single/Multiple image\n    - POST /ipfs/uploadFileToIpfs\n      upload single image to IPFS\n    - POST /ipfs/uploadMetaDatatoIPFS\n    - POST /nft/mintNFT\n    - POST /nft/submitToBc\n    - POST /nft/getBCStatus\n    - POST /nft/storeNFTTnxToAuditLog"}]}}
{"custom_id": "48.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Api Documentation\nDESCRIPTION :\n      Api Documentation\nENDPOINTS :\n    - POST /authentication/customer/registration\n      Customer Registration\n    - POST /authentication/customer/token\n      Get Token"}]}}
{"custom_id": "49.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Polygon\nDESCRIPTION :\n      The future of fintech.\nENDPOINTS :\n    - GET /v1/companies\n      Available Companies\n    - GET /v1/currencies\n      Available Currencies\n    - GET /v1/historic/agg/{size}/{symbol}/{date}\n      Historic Aggregates\n    - GET /v1/historic/forex/{from}/{to}/{date}\n      Historic Forex Ticks\n    - GET /v1/historic/quotes/{symbol}/{date}\n      Historic Quotes\n    - GET /v1/historic/trades/{symbol}/{date}\n      Historic Trades\n    - GET /v1/last/currencies/{from}/{to}\n      Last Trade for a Currency Pair\n    - GET /v1/last/stocks/{symbol}\n      Last Trade for a Symbol\n    - GET /v1/last_quote/currencies/{from}/{to}\n      Last Quote for a Currency Pair\n    - GET /v1/last_quote/stocks/{symbol}\n      Last Quote for a Symbol"}]}}
{"custom_id": "5.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : CurrencyConversion API\nDESCRIPTION :\n      This API will fetch currency conversion details from the boss service\nENDPOINTS :\n    - GET /get-details/{fromCurrency}\n      Get currency conversion details\n    - GET /get-ratelist/{fromCurrency}\n      Retrieve currency conversion rate list\n    - GET /get-list/{currencyCode}\n      Get currency conversion list details"}]}}
{"custom_id": "50.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : stocks-api\nDESCRIPTION :\n      API to access stock information\nENDPOINTS :\n    - GET /stocks/{id}\n      Find stock by ID\n    - PUT /stocks/{id}\n      Update price of a stock by ID\n    - GET /stocks\n      Get all stocks\n    - POST /stocks\n      Create a stock"}]}}
{"custom_id": "51.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Customers\nDESCRIPTION :\n      Customers Group API.  The API allows you to create, update, archive and retrieve your customers and real owners.\n      You can retrieve individual customers as well as a list of search results for customers.\nENDPOINTS :\n    - POST /customers/creation-requests\n      Creates a customer creation request.\n    - GET /customers/creation-requests/{requestId}\n      Gets a customer creation status and request data.\n    - GET /customers\n      Finds customers data based on a provided query.\n    - GET /customers/{customerId}\n      Finds one specific customer using customerId.\n    - GET /customers/{customerId}/interactions\n      Returns a list of customer's interactions.\n    - GET /customers/{customerId}/connected-users\n      Returns a list of users associated with the customer.\n    - POST /customers/external-registry-requests\n      Finds company's data in external registries based on a provided query.\n    - GET /customers/external-registry-requests/{requestId}\n      Gets a status of request and company's data.\n    - POST /customers/real-owners-search\n      Finds real owners' data in registries based on a provided query.\n    - POST /customers/{customerId}/archiving-requests\n      Creates a customer's archiving request.\n    - GET /customers/{customerId}/archiving-requests/{requestId}\n      Gets a customer's archiving request status.\n    - POST /customers/{customerId}/modification-requests\n      Creates a customer's modification request.\n    - GET /customers/{customerId}/modification-requests/{requestId}\n      Gets a customer's modification request."}]}}
{"custom_id": "53.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Payment Hub\nDESCRIPTION :\n      REST API responsible for handling online payments (credit card) synchronously. The Payment Hub exposes a simple\n      JSON contract for clients to authorize, capture and cancel credit card payments. Its implementation handle the\n      complexity and specific details of any implemented payment backends (Cielo, Adyen, etc).\nENDPOINTS :\n    - POST /payment/creditcard\n      Authorizes a credit card payment\n    - PUT /payment/creditcard/{payment_id}/capture\n      Captures a credit card payment\n    - GET /payment/creditcard/{payment_id}\n      Retrieves a credit card payment\n    - DELETE /payment/creditcard/{payment_id}\n      Cancels a credit card payment"}]}}
{"custom_id": "54.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : SomeBank\nDESCRIPTION :\n      Api for a banking application\nENDPOINTS :\n    - GET /customers/{customerId}\n    - PUT /customers/{customerId}\n    - PUT /accounts/{accountId}\n    - GET /transactions\n    - POST /transactions\n    - GET /customers\n    - POST /customers\n    - POST /auth/register\n    - POST /auth/login\n    - GET /accounts\n    - POST /accounts\n    - GET /accounts/iban"}]}}
{"custom_id": "55.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Account Transfers\nDESCRIPTION :\n      API specifications for transfers. This API belongs to payment domain. This unified API supports Intrabank,\n      Intragroup, Interbank(Local) and International Remittances transfers.\nENDPOINTS :\n    - POST /transfers\n      Create Transfer Order\n    - GET /transfers/{orderId}\n      Get Transfer Order Details"}]}}
{"custom_id": "57.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Fund API\nDESCRIPTION :\n      This API is used for the classic integration. If you are just starting your implementation, refer to our [new\n      integration guide](https://docs.adyen.com/marketplaces-and-platforms) instead.  The Fund API provides endpoints\n      for managing the funds in the accounts on your platform. These management operations include, for example, the\n      transfer of funds from one account to another, the payout of funds to an account holder, and the retrieval of\n      balances in an account.  For more information, refer to our [documentation](https://docs.adyen.com/marketplaces-\n      and-platforms/classic/). ## Authentication Your Adyen contact will provide your API credential and an API [...]\nENDPOINTS :\n    - POST /accountHolderBalance\n      Get the balances of an account holder\n    - POST /accountHolderTransactionList\n      Get a list of transactions\n    - POST /debitAccountHolder\n      Send a direct debit request\n    - POST /payoutAccountHolder\n      Pay out from an account to the account holder\n    - POST /refundFundsTransfer\n      Refund a funds transfer\n    - POST /refundNotPaidOutTransfers\n      Refund all transactions of an account since the most recent payout\n    - POST /setupBeneficiary\n      Designate a beneficiary account and transfer the benefactor's current balance\n    - POST /transferFunds\n      Transfer funds between platform accounts"}]}}
{"custom_id": "58.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : API for the Settlement Currency Rate converter\nDESCRIPTION :\n      This API provides a range of functions to get back currency conversion rates and amounts based on current\n      Mastercard currency conversion values.\nENDPOINTS :\n    - GET /conversion-rate\n      Get the currency conversion rate details.\n    - GET /conversion-rate-issued\n      Determine if the settlement rate has been issued.\n    - GET /settlement-currencies\n      getCurrencyRateData"}]}}
{"custom_id": "59.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : The 21-trading\nDESCRIPTION :\n      This is the API documentation for the 21-trading.com\nENDPOINTS :\n    - POST /api/Login\n      Logs in to the site\n    - POST /api/Register\n      Register User to the site\n    - POST /api/buy\n      buy a stock market\n    - POST /api/sell\n      sell a stock market\n    - GET /search\n      seach a stock based on ticker or company's name\n    - GET /quote/{symbol}\n      get quote from ticker\n    - GET /history/{symbol}/{interval}\n      get history\n    - POST /api/sendFriendRQ\n      send a friend request to other user\n    - POST /api/respondFriendRQ\n      respond a friend request to other user\n    - POST /api/removeFriend\n      remove a friend\n    - POST /api/logout\n      log user out\n    - GET /api/get-orders\n      getUserOrder\n    - GET /api/get-shares\n      getUserShare\n    - GET /api/portfolio\n      get total port value\n    - GET /friendList\n      get user's friend"}]}}
{"custom_id": "6.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Crypto API\nDESCRIPTION :\n      API for Crypto Currency Analysis\nENDPOINTS :\n    - GET /txes/{searchAddress}\n      searches all transactions for an address"}]}}
{"custom_id": "61.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : UserService\nDESCRIPTION :\n      UserService is an API that intended to work with users, user credentials and achievements.  **What's new since\n      1.2.0:**   * `Added new endpoint` - generatePassword.   * `Updated server urls.`   * `Added new request parameters\n      (UserRequest):`      Connections, Status, Skills.   * `Added new response parameters (User):` CreatedAt   *\n      `Rename endpoint:` createUser -> create\nENDPOINTS :\n    - GET /getUserById\n      Returns user information by id.\n    - GET /getUsersByIds\n      Returns users information by ids.\n    - GET /getAllUsers\n      Returns all users information with pagination and filter by full name.\n    - GET /getUserByEmail\n      Returns user information by email.\n    - GET /generatePassword\n      Returns randomly generated password.\n    - POST /create\n      The method attempts to add the user.    * __The user must have accsess right__ -- Add/Edit/Remove users.\n    - POST /editUser\n      Updates user fields. * __The user must have accsess right__ -- Add/Edit/Remove users.\n    - DELETE /disableUserById\n      Deletes the specified user by id. * __The user must have accsess right__ -- Add/Edit/Remove users."}]}}
{"custom_id": "62.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Banking API\nDESCRIPTION :\n      API for managing banking operations, specifically for employee interactions with customer accounts and\n      transactions.\nENDPOINTS :\n    - GET /employees/customer-accounts\n      View all customer accounts\n    - GET /employees/customer-transactions/{customerId}\n      View transactions of a customer\n    - POST /employees/transfer-funds\n      Transfer funds between customer accounts\n    - GET /employees/customers-without-accounts\n      View customers without accounts\n    - POST /employees/approve-signup\n      Approve customer's signup and create accounts\n    - POST /employees/close-account\n      Close customer account\n    - PATCH /employees/set-absolute-limit\n      Set an absolute transfer limit on a customer's account\n    - PATCH /employees/set-daily-limit\n      Set a daily transfer limit on a customer's account\n    - GET /employees/transactions\n      View all transactions across all customer accounts"}]}}
{"custom_id": "63.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Adyen Balance Control API\nDESCRIPTION :\n      The Balance Control API lets you transfer funds between merchant accounts that belong to the same legal entity and\n      are under the same company account.  ## Authentication To connect to the Balance Control API, you must\n      authenticate your requests with an [API key or basic auth username and\n      password](https://docs.adyen.com/development-resources/api-authentication). To learn how you can generate these,\n      see [API credentials](https://docs.adyen.com/development-resources/api-credentials).Here is an example of\n      authenticating a request with an API key:  ``` curl -H \"X-API-Key: Your_API_key\" \\ -H \"Content-Type: [...]\nENDPOINTS :\n    - POST /balanceTransfer\n      Start a balance transfer"}]}}
{"custom_id": "64.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Exchange Rate\nDESCRIPTION :\n      Exchange Rate API. Get the most recent exchange rate data. Returns exchange rates for a given time range. Returns\n      exchange rates for a given time range. Returns all our supported currencies/\nENDPOINTS :\n    - GET /latest\n      Get the most recent exchange rate data\n    - GET /historical\n      Returns exchange rates for a given time range.\n    - GET /status\n      Returns your current quota\n    - GET /currencies\n      Returns all our supported currencies."}]}}
{"custom_id": "66.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Users services\nDESCRIPTION :\n      The recommended way of watching this api is through https://app.swaggerhub.com/apis-\n      docs/comp_tech_web/UsersAPI/1.0.0  This rest API provides all the functionalities connected to operations on users\n      for the application OnlineShop. The operations included are signing in, creating a new user, deleting an user,\n      changing an user's data and obtaining users based on different parameters.\nENDPOINTS :\n    - POST /users/login\n      Checks whether user is signed up and if so, then returns the user\n    - GET /users\n      Get users with specified parameters. If parameter is not specified it matches any user, so it's possible to get\n      all users by not specyfying any of the parematers\n    - POST /users\n      Create a new user\n    - GET /users/{userId}\n      Returns an user with specified id\n    - PUT /users/{userId}\n      Updates data of the user with specified id\n    - DELETE /users/{userId}\n      Deletes the user with specified id"}]}}
{"custom_id": "67.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Update User\nDESCRIPTION :\n      By passing username and user details, you can update user details.\nENDPOINTS :\n    - POST /update\n      Update User"}]}}
{"custom_id": "69.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : PAYONE Link API\nDESCRIPTION :\n\nENDPOINTS :\n    - GET /v1/payment-links\n      List all payment links.\n    - POST /v1/payment-links\n      Create a payment link.\n    - GET /v1/payment-links/{linkId}\n      Get payment link by id.\n    - PUT /v1/payment-links/{linkId}\n      Update a payment link."}]}}
{"custom_id": "7.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Revolut\nDESCRIPTION :\n      Banks will charge you when you spend or transfer money abroad. We\u2019re not about that, and that\u2019s why over four\n      million people have switched to Revolut.\nENDPOINTS :\n    - POST /users\n      Create a user\n    - GET /users/{id}\n      get user info\n    - POST /transactions\n      Process a Transaction\n    - GET /transactions/{userId}\n      get transactions info by user id\n    - POST /payments\n      Process new payment\n    - GET /payments/{userId}\n      get payments info by user id\n    - POST /withdrawals\n      Process new withdrawal\n    - GET /withdrawals/{userId}\n      get withdrawals info by user id\n    - POST /currencyExchange\n      Process new exchange\n    - GET /currencyExchange/{userId}\n      get currencyExchange info by user id"}]}}
{"custom_id": "70.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : IDM user management\nDESCRIPTION :\n      ## **General info** IDM user contains several operations for user management. Creating, updating user also allows\n      get the detail and list of the users from several application, which are not connected to IDM via active\n      directory. These application are Cribis (CRI), Gemini Authentication and Authorization system (GAS).  Every\n      operation has different application orchestration described in diagrams under every operation and stored in\n      [GIT](https://git.rb.cz/bitbucket/projects/HOINA/repos/rbepi/browse/idm).   ### Contacts Integration Analyst:\n      Daniel Vav\u0159ina (daniel.vavrina@rb.cz)    Integration Architect: Ladislav Tepl\u00fd, Michal Ha\u0161ek\nENDPOINTS :\n    - GET /idm/user/v1/users\n      Get all users.\n    - POST /idm/user/v1/users\n      Create new user.\n    - GET /idm/user/v1/users/{identifier}\n      Get a user detail.\n    - PUT /idm/user/v1/users/{identifier}\n      Update information about user.\n    - PUT /idm/user/v1/users/{identifier}/statuses\n      Enable or disable user.\n    - PUT /idm/user/v1/users/{identifier}/passwords\n      Change or reset user password."}]}}
{"custom_id": "71.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : User-management-api\nDESCRIPTION :\n      User management api for user authentication and credential validation with various technoloties and securities.\nENDPOINTS :\n    - GET /valid_token\n      Validate user using temporarily generated token.\n    - POST /sign-in\n      User sign-in api"}]}}
{"custom_id": "73.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Personalized Offers\nDESCRIPTION :\n      This API provides content for financial instutions participating in Mastercard Personalized Offers to use in\n      online and mobile banking applications for cardholders.\nENDPOINTS :\n    - POST /activatestatementcreditoffer\n      Make Statement Credit Offer Available Redeemable\n    - GET /matchedoffers\n      Returns Matched Offers\n    - GET /offerdetails\n      Returns Information on an Offer\n    - GET /redeemedoffers\n      Returns Redeemed Offers\n    - GET /statementcreditactivationdetail\n      Returns Information About Redeemable Postpaid Credit Offer\n    - POST /userfeedback\n      Provide User Feedback on Offer\n    - GET /usersavings\n      Returns Savings for the User\n    - GET /usertoken\n      Returns User Session Token"}]}}
{"custom_id": "74.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : YUM.dev Stocks API\nDESCRIPTION :\n      This api is used to fetch stock info and creating a \"favorite\" list of stocks.\nENDPOINTS :\n    - GET /api/stocks\n      Get all the known stocks\n    - GET /api/stocks/{id}\n      Get info for a stock\n    - GET /auth/token\n      The token used for viewing, adding, and removing favorites\n    - GET /api/me/favorites\n      The list of favorite stocks for an authentication user\n    - PUT /api/me/favorites/{id}\n      Add a stock to the favorite's list\n    - DELETE /api/me/favorites/{id}\n      Remove a stock to the favorite's list"}]}}
{"custom_id": "75.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Adyen Payout API\nDESCRIPTION :\n      A set of API endpoints that allow you to store payout details, confirm, or decline a payout.  For more\n      information, refer to [Online payouts](https://docs.adyen.com/online-payments/online-payouts). ## Authentication\n      To use the Payout API, you need to have [two API credentials](https://docs.adyen.com/online-payments/online-\n      payouts#payouts-to-bank-accounts-and-wallets): one for storing payout details and submitting payouts, and another\n      one for confirming or declining payouts. If you don't have the required API credentials, contact our [Support\n      Team](https://www.adyen.help/hc/en-us/requests/new).  If using an API key, add an `X-API-Key` header with [...]\nENDPOINTS :\n    - POST /confirmThirdParty\n      Confirm a payout\n    - POST /declineThirdParty\n      Cancel a payout\n    - POST /payout\n      Make an instant card payout\n    - POST /storeDetail\n      Store payout details\n    - POST /storeDetailAndSubmitThirdParty\n      Store details and submit a payout\n    - POST /submitThirdParty\n      Submit a payout"}]}}
{"custom_id": "76.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Transactions Service\nDESCRIPTION :\n      The Transactions Service provides an API to retrieve transactions (also known as account or transaction history).\n      <h3> Error codes returned by the service</h3> <table>   <thead>     <tr>       <th>Error Code</th>       <th>Error\n      Message</th>       <th>Http Status Code</th>     </tr>   </thead>   <tbody>     <tr><td>TXN_10001</td><td>The\n      date(s) provided could not be parsed, or represented an invalid range.</td><td>400</td></tr>\n      <tr><td>TXN_10002</td><td>Request is missing a transactionId header.</td><td>500</td></tr>\n      <tr><td>TXN_10003</td><td>Request should only contain printable ASCII characters</td><td>400</td></tr> [...]\nENDPOINTS :\n    - GET /v1/transactions\n      Gets transactions for the given account"}]}}
{"custom_id": "78.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : ScotiaMobilePayments\nDESCRIPTION :\n      Contains only endpoints for service payments, which are add payee, find merchants, query payments and query payees\nENDPOINTS :\n    - GET /merchants\n      Get Merchant\n    - POST /merchants/activation\n      Payments\n    - GET /merchants/{merchant-key}/action-fields\n      Get action fields by merchant\n    - POST /payees\n      Add payee\n    - GET /payments/{id-usuario}\n      Query from payments made\n    - GET /payees/{id-usuario}\n      Query of aggregate service contracts"}]}}
{"custom_id": "79.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Adyen Recurring API\nDESCRIPTION :\n      The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created\n      with validation during a payment request.  For more information, refer to our [Tokenization\n      documentation](https://docs.adyen.com/online-payments/tokenization). ## Authentication You need an [API\n      credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.  If using an\n      API key, add an `X-API-Key` header with the API key as the value, for example:   ``` curl -H \"Content-Type:\n      application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ```  Alternatively, you can use the username and [...]\nENDPOINTS :\n    - POST /createPermit\n      Create new permits linked to a recurring contract.\n    - POST /disable\n      Disable stored payment details\n    - POST /listRecurringDetails\n      Get stored payment details\n    - POST /notifyShopper\n      Ask issuer to notify the shopper\n    - POST /scheduleAccountUpdater\n      Schedule running the Account Updater"}]}}
{"custom_id": "8.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Investments\nDESCRIPTION :\n      The Investments API defines the necessary steps to create, modify and list investments.\nENDPOINTS :\n    - POST /investments\n      Intialize an investment from an account.\n    - PUT /investments/{key}/execute\n      Executes the previously initialized investment.\n    - GET /investments/me\n      Get the customer's list of investments.\n    - GET /investments/me/{investment-key}\n      Retrieves the customer's investments detailed information.\n    - PUT /investments/me/{investment-key}\n      Update the given investment instructions.\n    - GET /investments/funds/me\n      Get the customer's investment funds."}]}}
{"custom_id": "80.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : VUB Open Banking Services (OBS)\nDESCRIPTION :\n      VUB, a.s. Open banking services - Account information service (AIS), Value-added service (VAS)\nENDPOINTS :\n    - GET /v1/accounts/{account-id}/balances\n      Read balance\n    - GET /v1/accounts/{account-id}/transactions\n      Read transaction list of an account\n    - GET /v1/accounts/{account-id}/transactions/{transactionId}\n      Read transaction details\n    - POST /v1/value-added-service/iban/calculate\n      IBAN calculation\n    - GET /v1/value-added-service/iban/validate/{account-id}\n      IBAN validation\n    - GET /v1/value-added-service/iban/analyze/{account-id}\n      IBAN analysis"}]}}
{"custom_id": "81.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Currency Exchange\nDESCRIPTION :\n      This is a Currency Exchange api.\nENDPOINTS :\n    - POST /currency\n      Add a new currency\n    - PUT /currency\n      Update an existing Currency\n    - DELETE /currency\n      Deletes a currency\n    - GET /currency/findByCode\n      Finds currency by code\n    - GET /exchange\n      Returns currency Exchange"}]}}
{"custom_id": "82.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Customer Service\nDESCRIPTION :\n      This is a customer service.  You can find out more about\n      https://github.com/satheeshkumarmayalagan/qtest/blob/master/docs/CustomerService_API_Overview.pdf\nENDPOINTS :\n    - POST /customer\n      Create a new customer\n    - GET /customer/{customerId}\n      Find customer by ID\n    - PUT /customer/{customerId}\n      Update an existing customer\n    - DELETE /customer/{customerId}\n      Deletes a customer"}]}}
{"custom_id": "83.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Sirius NFT Microservice\nDESCRIPTION :\n      This is a microservice server for Sirius NFT. It is the bridge service between application and Sirius blockchain.\nENDPOINTS :\n    - GET /account/{address}/nft\n      Get list of NFT holding by a Sirius account address\n    - GET /account/{address}/txn\n      Get confirmed transaction list of Sirius account address\n    - GET /nft/{nftID}/info\n      Find NFT info\n    - GET /nft/{nftID}/txnHistory\n      Find NFT transactions history\n    - POST /nft/{nftID}/metadata\n      Find NFT metadatas\n    - GET /txn/{txnHash}\n      Find transaction info\n    - POST /service/mintNFT\n      Mint a new NFT to address\n    - POST /service/createNewMultisig\n      Create a new multisig account for user"}]}}
{"custom_id": "85.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Authentication API\nDESCRIPTION :\n      ## API of the Authentication Service  This specification describes the endpoints, request/response model of the\n      Authentication API. This API provides REST resources to authenticate and authorize users of Proman.  The resources\n      should only be used over HTTPS (SSL) and can be accessed via the following base URL: https://proman.io/api/v1/ ##\n      API usage guidelines  This section describes general rules and guidelines for using REST based services offered by\n      Proman.   * All resources can only be accessed via HTTPS and a respective HTTP Basic Authentication header is also\n      required.   * Proman reserves the right to add new parameters without further notice (in request and [...]\nENDPOINTS :\n    - POST /login\n      Authenticate and Authorize User\n    - POST /logout\n      Logout the currently logged in user"}]}}
{"custom_id": "89.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Private Ethereum Blockchain API\nDESCRIPTION :\n      This is an API for private blockchain using ethereum\nENDPOINTS :\n    - GET /example\n      Server example operation\n    - GET /ping\n      Server heartbeat operation\n    - POST /wallets\n      Wallet creation\n    - GET /balance/{token}\n      Get token balance\n    - GET /supply/{token}\n      Get token total supply\n    - POST /burn/{token}\n      Burn token\n    - POST /mint/{token}\n      Mint token\n    - POST /transfer/{token}\n      Transfer token\n    - GET /blocks/latest\n      Get latest block number\n    - GET /blocks/{block}\n      Get blocks information\n    - GET /transaction/{hash}\n      Get transaction information"}]}}
{"custom_id": "9.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Currency Exchange Rate\nDESCRIPTION :\n      It is used to convert the rate of requested currency\nENDPOINTS :\n    - POST /currencyconversion\n      convert request currency rate"}]}}
{"custom_id": "90.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : OLD DO NOT USE Channel Worklife Savings and Retirement Summary Widget\nDESCRIPTION :\n      Channel service to support Worklife Savings\nENDPOINTS :\n    - GET /api/channel/v2/savingandretirementsummarywidgets/retirementSummary\n      This service is used to display combined view of a participants Retirement Summary.\n    - GET /api/channel/v2/savingandretirementsummarywidgets/dcRateOfReturn\n      This returns the rate of return response based on the time period option user selects.It will take the plan Id and\n      date range label as query string parameters.\n    - POST /api/channel/v2/savingandretirementsummarywidgets/projectedretirementIncome\n      This service is used to update a participants projected retirement income based on new assumptions based."}]}}
{"custom_id": "91.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Mastercard Blockchain\nDESCRIPTION :\n      The Mastercard Blockchain REST/JSON API provides a foundation for prototyping blockchain applications and to\n      become familiar with the principles of blockchain technology, all using an advanced, high-performance, blockchain\n      implementation from Mastercard.  The API allows you to specify your own transaction types and flows to meet any\n      business need. A good guideline to using blockchain effectively is to first decide \"What data is it that we need\n      to share?\". You will also want to check out our Smart Contract API as your functionality requirements get more\n      complex.  As your use case progresses, you will likely want to move from a fully hosted \"Blockchain as a [...]\nENDPOINTS :\n    - GET /status\n      Gets general network status information\n    - GET /node\n      Gets information about network nodes\n    - GET /node/{address}\n      Gets information about a specific node on the network\n    - GET /app/{id}\n      Gets information about the specified application\n    - POST /app/{id}\n      Configure or update your application\n    - GET /address/{address}\n      Gets information about a specific address\n    - GET /block\n      Get information about a block or a range of blocks\n    - GET /block/{key}\n      Gets a specified block\n    - PUT /entry\n      Adds a transaction entry to the blockchain\n    - GET /entry/{key}\n      Information about the specified transaction entry\n    - POST /support/encoding\n      Provides transforms between encodings"}]}}
{"custom_id": "92.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : XE Currency Data API\nDESCRIPTION :\n      XE Currency Data - Integrate your application with our globally trusted currency data.   Get your free API\n      credentials for 7 days <a href=\"https://xecd.xe.com/account/signup.php?freetrial\">here</a>\nENDPOINTS :\n    - GET /account_info\n      This endpoint will return basic information for a specific account.\n    - GET /currencies\n      Access a list of all available currencies.\n    - GET /convert_from\n      Convert from one base currency to one or multiple counter currencies.\n    - GET /convert_to\n      Convert to a currency amount from one or multiple other currencies.\n    - GET /historic_rate\n      Get historic rates for one base currency against one or more counter currencies.\n    - GET /historic_rate/period\n      Get historic rates for one base currency against one or more counter currencies over a period of time.\n    - GET /monthly_average\n      Get monthly average rates for a single base currency and one or more counter currency for the month/year you\n      specify in your API query."}]}}
{"custom_id": "95.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Verify user\nDESCRIPTION :\n      Return user information if user is authenticated. Also used to check if user is authenticated or authentication\n      expired\nENDPOINTS :\n    - POST /vue/auth/verify\n      Verify current session data"}]}}
{"custom_id": "96.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Branch Locator API\nDESCRIPTION :\n\nENDPOINTS :\n    - GET /open-banking/v2.2/branches\n      This API will return the branch details for all branches and is prepared to the Open Banking standards as defined\n      by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. It is regulated by the UK\n      Competition and Markets Authority (CMA). Data is only available for the United Kingdom.\n    - GET /x-open-banking/v2.2/branches/country/{country}\n      This extended API will return the branch details for all branches in the specified country. It is based-on the\n      Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2.\n      The extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is [...]\n    - GET /x-open-banking/v2.2/branches/country/{country}/town/{town}\n      This extended API will return the branch details for all branches in the specified town. It is based-on the Open\n      Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The\n      extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is [...]\n    - GET /x-open-banking/v2.2/branches/geo-location/lat/{latitude}/long/{longitude}\n      This API will return the branch details for all branches within a specified radius (1 to 10 miles) of the\n      specified latitude and longitude. It is based-on the Open Banking standards as defined by the Open Banking\n      Implementation Entity (OBIE) in data dictionary version 2.2. The extended functionality may not fully adhere [...]\n    - GET /x-open-banking/v2.2/branches/postcode/{postcode}\n      This extended API will return the branch details for all branches within a 5 mile radius of the specified\n      postcode. It is based-on the Open Banking standards as defined by the Open Banking Implementation Entity (OBIE) in\n      data dictionary version 2.2. The extended functionality may not fully adhere to the non-functional [...]\n    - GET /x-open-banking/v2.2/branches/sortcode/{sortcode}\n      This extended API will return the branch details for a branch specified by its sort code. It is based-on the Open\n      Banking standards as defined by the Open Banking Implementation Entity (OBIE) in data dictionary version 2.2. The\n      extended functionality may not fully adhere to the non-functional requirements of the regulator. Data is [...]"}]}}
{"custom_id": "97.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : Currencytick API Documentation\nDESCRIPTION :\n\nENDPOINTS :\n    - GET /healthcheck\n      Healthcheck\n    - GET /historical\n      Historical Exchange Rate\n    - GET /live\n      Live currency exchange rate\n    - GET /supported_currencies\n      List of supported currencies"}]}}
{"custom_id": "98.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : MDES Customer Service\nDESCRIPTION :\n      This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts\n      enabled through our digitization platform.\nENDPOINTS :\n    - POST /accountholdermessaging\n      Allows issuers to display customized messages per token within the Apple Pay wallet, below the digitized image of\n      the card.\n    - POST /search\n      Provides the ability to search for tokens based on Account PAN, Alternate Account Identifier, Token Unique\n      Reference, Token, Payment App Instance Id or Comment Id. Returns all of the tokens associated with an account\n      according to the scope of the indicated search request criteria. The response includes key state and [...]\n    - GET /systemstatus\n      Returns the overall system status of the Mastercard Digital Enablement Service.\n    - POST /token/activate\n      Used to activate a token for a digitization that has been approved and provisioned, but requires additional\n      cardholder authentication prior to activation. If the provisioning was not completed successfully, activation\n      cannot be accomplished using Customer Service API. It is expected that a cardholder will complete the [...]\n    - POST /token/activationmethods\n      Used to retrieve the available Activation Methods for a token that is awaiting activation. Activation Methods are\n      the means by which a cardholder may complete cardholder authentication with the issuer beyond the scope of MDES.\n      It is possible that there are no Activation Methods for a token when an issuer did not provide any [...]\n    - POST /token/comments\n      Used to retrieve all comments associated with a token. Typically the response includes comments created earlier by\n      Issuer Customer Service representatives detailing additional information about a particular inquiry or event.\n      There may also be comments with warnings of potential fraud. These comments are created automatically by the [...]\n    - POST /token/delete\n      Used to delete a token so that it may not initiate any new transactions. All authorizations for a deleted token\n      will be declined. A deleted token may not be returned to an active state.\n    - POST /token/resendactivationcode\n      Used to trigger the process of generating and sending a new Activation Code (for a specific token) to the\n      cardholder via the requested Activation Method. When successful, a new Activation Code Expiration Date Time period\n      will begin, and a new Activation Code will be sent to the issuer using the Activation Code Notification [...]\n    - POST /token/resetmobilepin\n      Used to request that the Mobile PIN for a Mastercard Cloud-Based Payment token in a single issuer wallet is reset.\n      The request is passed to the Credential Management System for processing. When the Mobile PIN is a token-level PIN\n      (as opposed to a wallet-level PIN), the cardholder must choose a new PIN within 10 minutes of a Reset Mobile [...]\n    - POST /token/statushistory\n      Used to retrieve the historical statuses and lifecycle events for a token, such as when it was initially\n      activated, subsequently suspended or resumed, and finally deleted.\n    - POST /token/suspend\n      Used to suspend an active token so that it may not initiate any new transactions. All authorizations for a\n      SUSPENDED token will be declined. Tokens may be suspended by multiple parties (suspenders) concurrently. The token\n      status is updated from ACTIVE to SUSPENDED when the first suspender triggers a suspend action. Additional [...]\n    - POST /token/unsuspend\n      Used to unsuspend or resume a suspended token and return it to the active state where it may initiate new\n      transactions. Tokens may be suspended by multiple parties (suspenders) concurrently. The token status is updated\n      from ACTIVE to SUSPENDED when the first suspender triggers a suspend action. Additional suspenders can add [...]\n    - POST /token/update\n      Used to update Account PAN Mapping Information or Issuer Product Configuration ID associated to a provisioned\n      token. To update a specific token, the API should be requested using the Token Unique Reference. To update all\n      tokens mapped to a specific Account PAN, the API should be requested using the Account PAN. In either case, [...]\n    - POST /transactions\n      Used to retrieve transactions performed by a token. It only returns transactions performed within the last 30\n      days, to help identify a particular token, or to identify a particular recent transaction. It is not intended to\n      provide the full transaction history of a token or Account PAN.<br><br>_Notes:_ The Transaction History API [...]\n    - POST /updatetokenassurance\n      Used after an issuer has performed additional cardholder authentication to indicate an increased level of token\n      assurance. It will only be applied to tokens that actually have a Token Assurance Level, and those that are in\n      ACTIVE or SUSPENDED state."}]}}
{"custom_id": "99.yaml", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "user", "content": "<categories>\n  - banking: Traditional banking services, including account management, Automated Teller Machines (ATMs), credit card management and payment methods.\n  - blockchain: Blockchain technology, such as cryptocurrency and smart contracts.\n  - client: Client information management, including customer profiles, personal goals and credit rating.\n  - currency: Currency exchange rates and currency conversion tools.\n  - payment: Payment processing, including transactions, digital wallets and invoices.\n  - savings: Financial planning tools for savings, investment plans, interest calculations and savings product.\n  - trading: Trading activities, stock trading, forex trading, and investment portfolios.\n  - transfer: Transferring funds between accounts, both domestically and internationally.\n  - user-password: User authentication, password management, and security protocols (tokens) for user access.\n  - loan-mortgage: Loan and mortgage processes, application submission and lenders.\n</categories>\n\n<instructions>\n  1. You will receive an API summary. Read it carefully.\n  2. Identify the main functionality and purpose of the API.\n  3. Classify the API into one of the following categories: [banking, blockchain, client, currency, payment, savings, trading, transfer, user-password, loan-mortgage].\n  4. Respond only with the category name.\n</instructions>"}, {"role": "assistant", "content": "Understood. Please provide the API summary."}, {"role": "user", "content": "TITLE : AltoroJ REST API\nDESCRIPTION :\n\nENDPOINTS :\n    - GET /account\n      Returns a list of all the accounts owned by the user\n    - GET /account/{accountNo}\n      Returns details about a specific account\n    - GET /account/{accountNo}/transactions\n      Returns the last 10 transactions attached to an account\n    - POST /account/{accountNo}/transactions\n      Return transactions between 2 specific dates\n    - POST /admin/addUser\n      Add new user\n    - POST /admin/changePassword\n      Change user password\n    - POST /feedback/submit\n      Submit feedback for the bank\n    - GET /feedback/{feedbackId}\n      Retrieve feedback\n    - GET /login\n      Check if any user is logged in\n    - POST /login\n      Login method\n    - GET /logout\n      Logout from the bank\n    - POST /transfer\n      Transfer money between two accounts"}]}}
